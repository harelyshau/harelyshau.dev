sap.ui.require.preload({
    "pharelyshau/Component.js": function () {
        sap.ui.define(["sap/ui/core/UIComponent", "./model/models", "./util/themeHelper", "./util/languageHelper"], function (e, t, i, n) { "use strict"; return e.extend("pharelyshau.Component", { metadata: { interfaces: ["sap.ui.core.IAsyncContentCreation"], manifest: "json" }, init() { e.prototype.init.apply(this, arguments); this.getRouter().initialize(); this.setModel(t.createDeviceModel(), "device"); n.initLanguage(); i.initTheme(); navigator.serviceWorker?.register("/sw.js") }, destroy() { e.prototype.destroy.apply(this, arguments) } }) });
    },
    "pharelyshau/controller/App.controller.js": function () {
        sap.ui.define(["./BaseController", "../model/models"], (e, t) => { "use strict"; return e.extend("pharelyshau.controller.App", { onInit() { this.getView().addStyleClass(this.getContentDensityClass()); this.setModel(t.createAppModel(), "app"); this.getRouter().attachRouteMatched(this.onRouteMatched.bind(this)); this.getRouter().attachTitleChanged(this.onTitleChanged.bind(this)) }, onRouteMatched(e) { this.getModel("app").setProperty("/page", e.getParameter("name")) }, onTitleChanged(e) { document.title = e.getParameter("title") } }) });
    },
    "pharelyshau/controller/BaseController.js": function () {
        sap.ui.define(["sap/ui/core/mvc/Controller", "sap/ui/core/UIComponent", "sap/ui/Device", "sap/m/MessageToast", "../util/themeHelper", "../util/languageHelper"], (e, t, o, n, s, r) => { "use strict"; return e.extend("pharelyshau.controller.BaseController", { getRouter() { return t.getRouterFor(this) }, getModel(e) { return this.getView().getModel(e) }, setModel(e, t) { return this.getView().setModel(e, t) }, i18n(e, t) { const o = this.getOwnerComponent().getModel("i18n").getResourceBundle(); return o.getText(e, t) }, getContentDensityClass() { return o.support.touch ? "sapUiSizeCozy" : "sapUiSizeCompact" }, onPressOpenOverflowMenu(e) { this.openPopover("OverflowMenu", e.getSource(), null, true) }, onPressNavigateToPage(e) { this.getRouter().navTo(e) }, onPressSendEmail() { const e = this.getModel()?.getProperty("/Email") ?? "pavel@harelyshau.dev"; sap.m.URLHelper.triggerEmail(e, "Email from harelyshau.dev website") }, onPressSetTheme(e) { s.setTheme(e); const t = s.mapTheme(null, sap.ui.core.Configuration.getTheme()); this.getModel("app").setProperty("/theme", t) }, onPressSetLanguage(e) { sap.ui.core.Configuration.setLanguage(e); r.setLanguage(e); location.reload() }, async onPressShareLink() { const e = window.location.href; const t = this.i18n("msgSiteUrlCopied", [e]); const o = this.i18n("msgSiteUrlNotCopied"); this.copyToClipboard(e, t, o) }, async copyToClipboard(e, t, o) { try { await navigator.clipboard.writeText(e); n.show(t ?? this.i18n("msgCopied")) } catch { n.show(o ?? this.i18n("msgNotCopied")) } }, onPressShowCode() { const e = "https://github.com/harelyshau/harelyshau.dev"; sap.m.URLHelper.redirect(e, true) }, async openDialog(e, t, o) { const n = await this.loadAndAssignFragment(e, o); if (t) n.bindElement(t); n.open() }, async openPopover(e, t, o, n) { const s = await this.loadAndAssignFragment(e, n); if (this.isPopoverOpen(s, o)) { s.close(); return } if (o) s.bindElement(o); s.openBy(t) }, async loadAndAssignFragment(e, t) { let o = "pharelyshau.fragment."; const n = this.getModel("app").getProperty("/page"); o += !t ? `${n}.${e}` : e; this["o" + e] = this["o" + e] ?? this.loadFragment({ name: o }); this["o" + e] = await this["o" + e]; this["o" + e].addStyleClass(this.getContentDensityClass()); return this["o" + e] }, isPopoverOpen(e, t) { const o = e.getBindingContext()?.getPath() === t; const n = e.isOpen ? e.isOpen() : false; return n && o }, getObjectByEvent(e, t) { return this.getObjectByControl(e.getSource(), t) }, getObjectByControl(e, t) { return e.getBindingContext(t).getObject() }, getPathByEvent(e, t) { return this.getPathByControl(e.getSource(), t) }, getPathByControl(e, t) { return e.getBindingContext(t).getPath() } }) });
    },
    "pharelyshau/controller/Calendar.controller.js": function () {
        sap.ui.define(["./BaseController", "sap/m/MessageToast", "sap/m/SinglePlanningCalendarDayView", "sap/m/SinglePlanningCalendarWorkWeekView", "sap/m/SinglePlanningCalendarWeekView", "sap/m/SinglePlanningCalendarMonthView", "../fragment/Calendar/TwoDaysView", "../fragment/Calendar/ThreeDaysView", "../util/googleApiTokenFetcher", "../model/models", "../model/formatter"], (t, e, n, i, o, s, a, r, p, l, c) => { "use strict"; return t.extend("pharelyshau.controller.Calendar", { formatter: c, onInit() { this.loadGoogleAPI(); this.setModel(l.createCalendarModel()); this.setModel(l.createCalendarViewModel(), "view"); this.addCalendarViews() }, onAfterRendering() { this.getModel().setSizeLimit(250) }, loadGoogleAPI() { const t = document.createElement("script"); t.src = "https://apis.google.com/js/api.js"; t.onload = () => { gapi.load("client", this.onLoadGoogleCalendarClient.bind(this)) }; document.head.appendChild(t) }, async onLoadGoogleCalendarClient() { await this.initGoogleApiClient(); await this.setGoogleApiAuthToken(); this.refreshCalendar(); this.byId("btnMakeAppointment").setEnabled(true) }, async initGoogleApiClient() { try { const t = "https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"; await gapi.client.init({ discoveryDocs: [t] }) } catch (t) { console.error("Error initializing Google Calendar Client:", t.error) } }, async setGoogleApiAuthToken() { const t = await this.getServiceAccountCredentials(); gapi.auth.setToken(await p.getToken(t)) }, async getServiceAccountCredentials() { const t = await fetch("resource/data/ServiceAccountCreds.json"); return t.json() }, async getAppointmentsGC() { const t = this.getModel("view"); t.setProperty("/busy", true); try { const t = this.getRequestParamsGC(); const e = await gapi.client.calendar.events.list(t); return e.result.items } catch (t) { console.error("Error fetching appointments:", t) } finally { t.setProperty("/busy", false) } }, createAppointmentGC(t) { try { const e = this.formatter.appointmentGC.call(this, t); const n = this.getRequestParamsGC(e); return gapi.client.calendar.events.insert(n) } catch (t) { console.error("Error creating appointment:", t) } }, removeAppointmentGC(t) { try { const e = this.getRequestParamsGC(null, t); return gapi.client.calendar.events.delete(e) } catch (t) { console.error("Error deleting appointment:", t) } }, updateAppointmentGC(t) { try { const e = this.formatter.appointmentGC.call(this, t); const n = this.getRequestParamsGC(e, t.ID); return gapi.client.calendar.events.update(n) } catch (t) { console.error("Error updating appointment:", t) } }, getRequestParamsGC(t, e) { const n = { calendarId: this.getModel().getProperty("/Email") }; switch (true) { case !t && !e: this.setReadRequestParamsGC(n); break; case !!e: n.eventId = e; case !!t: n.resource = t; n.conferenceDataVersion = 1; default: n.sendUpdates = "all" }return n }, setReadRequestParamsGC(t) { const e = this.getModel("view"); t.timeMin = e.getProperty("/timeMin").toISOString(); t.timeMax = e.getProperty("/timeMax").toISOString(); t.singleEvents = true; t.maxResults = 250 }, updateDateRange() { const t = this.getModel("view"); const e = this.byId("calendar").getStartDate(); const n = new Date(e); const i = new Date(e); n.setDate(1); n.setHours(0, 0, 0); n.setMonth(n.getMonth() - 1); i.setHours(23, 59, 59); i.setMonth(i.getMonth() + 2); i.setDate(0); t.setProperty("/timeMin", n); t.setProperty("/timeMax", i) }, setAppointments(t) { this.setExistingAppointments(t); this.refreshAppointments() }, setExistingAppointments(t) { const e = t.map(t => this.formatter.appointmentLocal.call(this, t)); this.getModel().setProperty("/ExistingAppointments", e) }, getExistingAppointments() { return this.getModel().getProperty("/ExistingAppointments") }, refreshAppointments() { this.setAppointmentsWithEditable() }, setAppointmentsWithEditable() { const t = [...this.getExistingAppointments()]; this.addEditableAppointment(t); this.getModel().setProperty("/Appointments", t) }, addEditableAppointment(t) { const e = this.getEditableAppointment(); if (!e) return; const n = t.some((n, i) => { if (n.ID === e.ID) { t[i] = e; return true } }); if (!n) t.push(e) }, onPressOpenAppointmentDialog() { const t = this.getDatesForNewAppointment(); this.setCalendarStartDate(t[0]); this.createAppointment(...t); this.openAppointmentDialog() }, onAppointmentCreateOpenDialog(t) { const n = t.getParameter("startDate"); if (!this.isDateInFuture(n)) { e.show(this.i18n("msgStartDateMustBeInFuture")); return } this.createAppointment(n, t.getParameter("endDate")); this.openAppointmentDialog() }, onAppointmentSelectOpenPopover(t) { const n = t.getParameter("appointment"); if (!n || n.getSelected()) return; const i = this.getObjectByControl(n); if (!this.isAppointmentAvailable(i.ID)) { e.show(this.i18n("msgBusyAtThisTime")); return } const o = this.getPathForAppointment(i); this.openAppointmentPopover(o, n) }, onAppointmentResizeDrop(t) { const e = this.getObjectByControl(t.getParameter("appointment")); const n = this.isAppointmentAvailable(e.ID); if (!n || e.ID === "new") return; e.StartDate = t.getParameter("startDate"); e.EndDate = t.getParameter("endDate"); this.getModel().refresh(); this.updateAppointmentGC(e) }, onStartDateChangeCalendar() { this.refreshCalendar() }, onMoreLinkPress() { this.setCalendarDayView() }, onHeaderDateSelect() { this.setCalendarDayView() }, onPressToggleFullDay(t) { const e = t.getSource().getProperty("pressed"); if (e) { localStorage.setItem("fullDay", true) } else { localStorage.removeItem("fullDay") } }, setCalendarStartDate(t) { const e = this.byId("calendar"); const n = e.getStartDate(); if (this.areDatesInSameDay(n, t)) return; e.setStartDate(t); this.refreshCalendar() }, setCalendarDayView() { const t = this.byId("calendar"); t.setStartDate(oEvent.getParameter("date")); t.setSelectedView(t.getViews()[0]) }, async refreshCalendar() { this.updateDateRange(); const t = await this.getAppointmentsGC(); this.setAppointments(t) }, addCalendarViews() { const t = this.getOwnerComponent().getModel("device"); const e = this.byId("calendar"); const p = t.getProperty("/system/phone"); const l = t.getProperty("/resize/width") <= 800; e.addView(new n({ key: "1", title: this.i18n("ttlDay") })); if (p || l) { e.addView(new a({ key: "2", title: this.i18n("ttl2Days") })); e.addView(new r({ key: "3", title: this.i18n("ttl3Days") })) } e.addView(new i({ key: "5", title: this.i18n("ttlWorkWeek") })); if (!p && !l) { e.addView(new o({ key: "7", title: this.i18n("ttlWeek") })) } e.addView(new s({ key: "month", title: this.i18n("ttlMonth") })) }, openAppointmentDialog() { this.openDialog("AppointmentDialog", "/EditableAppointment") }, async onPressCreateEditAppointment(t) { const [n, i] = this.validateEmailInput(); if (!n) { e.show(i); return } this.oAppointmentDialog.close(); let o = this.getObjectByEvent(t); localStorage.setItem("email", o.Email); let s; if (o.ID === "new") { this.getModel().getProperty("/ExistingAppointments").push(o); s = await this.createAppointmentGC(o); this.addAppointmentIdToLocalStorage(s.result.id) } else { s = await this.updateAppointmentGC(o) } o = this.formatter.appointmentLocal.call(this, s.result); this.refreshAppointment(o) }, onPressCloseAppointmentDialog() { this.oAppointmentDialog.close() }, onPressAddGoogleMeet(t) { const e = this.getPathByEvent(t); const n = this.getInitialAppointment()?.GoogleMeet; this.getModel().setProperty(e + "/GoogleMeet", n ?? "willBeCreated") }, onPressRemoveGoogleMeet(t) { const e = this.getPathByEvent(t); this.getModel().setProperty(e + "/GoogleMeet", null) }, onChangePicker(t, e) { const n = t.getSource(); const i = this.getObjectByEvent(t); const o = t.getParameter("valid") && !!t.getParameter("value"); if (!o) { this.resetPickerValue(n, i[e]); return } const s = n.getDateValue(); if (e === "StartDate") { this.updateAppointmentEndDateByDuration(s, i); this.setCalendarStartDate(s) } i[e] = s; this.getModel().refresh(true) }, onAfterCloseAppointmentDialog(t) { const e = this.getObjectByEvent(t); if (e.ID !== "new") this.resetAppointment(e); this.setEditableAppointment(null); this.refreshAppointments() }, async openAppointmentPopover(t, e) { this.openPopover("AppointmentPopover", e, t) }, onPressEditOpenAppointmentDialog(t) { this.oAppointmentPopover.close(); const e = this.getObjectByEvent(t); this.setEditableAppointment(e); this.setInitialAppointment(e); this.openAppointmentDialog() }, async onPressRemoveAppointment(t) { this.oAppointmentPopover.close(); const e = this.getObjectByEvent(t); this.removeAppointment(e); await this.removeAppointmentGC(e.ID); this.removeAppointmentIdFromLocalStorage(e.ID) }, onPressCloseAppointmentPopover() { this.oAppointmentPopover.close() }, onPressCopyConferenceLink(t) { const e = this.getObjectByEvent(t); const n = e.GoogleMeet ?? e.Conference; this.copyToClipboard(n) }, onPressJoinToConference(t) { const e = this.getObjectByControl(t); const n = e.GoogleMeet ?? e.Conference; sap.m.URLHelper.redirect(n, true) }, validateEmailInput() { const t = this.byId("inpEmail"); if (this.isInputFilledAndValid(t)) return [true]; if (!t.getValue()) { this.resetInputValue(t); return [false, this.i18n("msgFillEmail")] } return [false, this.i18n("msgInvalidEmail")] }, isInputFilledAndValid(t) { const e = t.getValueState() !== "Error"; const n = t.getValue(); return e && n }, resetInputValue(t) { t.setValue("s"); t.setValue("") }, resetPickerValue(t, e) { t.setValue(""); t.setDateValue(e) }, getDatesForNewAppointment() { const t = this.roundUpDateTo15Min(new Date); const e = this.byId("calendar").getStartDate(); if (this.isDateInFuture(e)) { t.setTime(this.roundUpDateTo15Min(e).getTime()) } const n = this.getModel("view").getProperty("/appointmentDuration"); const i = new Date(t.getTime() + n); return [t, i] }, roundUpDateTo15Min(t) { const e = t.getMinutes() % 15; return new Date(t.getTime() + (15 - e) * 6e4) }, isDateInFuture(t) { return new Date < t }, areDatesInSameDay(t, e) { const n = new Date(t).setHours(0, 0, 0, 0); const i = new Date(e).setHours(0, 0, 0, 0); return n === i }, refreshAppointment(t) { const e = this.getExistingAppointments(); e.forEach((n, i) => { const o = n.ID === t.ID; if (o || n.ID === "new") { e[i] = t; return } }); this.refreshAppointments() }, createAppointment(t, e) { const n = { ID: "new", Email: localStorage.getItem("email"), StartDate: t, EndDate: e, Mode: "create", Type: "Type01", GoogleMeet: "willBeCreated" }; this.setEditableAppointment(n); this.refreshAppointments(); return n }, removeAppointment(t) { const e = this.getModel().getProperty("/ExistingAppointments"); e.splice(e.indexOf(t), 1); this.refreshAppointments() }, resetAppointment(t) { const e = this.getInitialAppointment(); Object.keys(e).forEach(n => { t[n] = e[n] }) }, updateAppointmentEndDateByDuration(t, e) { const n = e.EndDate - e.StartDate; e.EndDate.setTime(t.getTime() + n) }, getPathForAppointment(t) { const e = this.getModel().getProperty("/Appointments"); return "/Appointments/" + e.indexOf(t) }, getEditableAppointment() { return this.getModel().getProperty("/EditableAppointment") }, setEditableAppointment(t) { this.getModel().setProperty("/EditableAppointment", t) }, getInitialAppointment() { return this.getModel().getProperty("/InitialAppointment") }, setInitialAppointment(t) { this.getModel().setProperty("/InitialAppointment", { ...t }) }, isAppointmentAvailable(t) { const e = t === "new"; const n = this.getAvailableAppointmentIDs().includes(t); return e || n }, getAvailableAppointmentIDs() { return JSON.parse(localStorage.getItem("appointments")) ?? [] }, addAppointmentIdToLocalStorage(t) { const e = this.getAvailableAppointmentIDs(); e.push(t); localStorage.setItem("appointments", JSON.stringify(e)) }, removeAppointmentIdFromLocalStorage(t) { const e = this.getAvailableAppointmentIDs(); e.splice(e.indexOf(t), 1); localStorage.setItem("appointments", JSON.stringify(e)) } }) });
    },
    "pharelyshau/controller/HanoiTower.controller.js": function () {
        sap.ui.define(["./BaseController", "sap/m/MessageToast", "sap/m/InstanceManager", "sap/ui/core/ResizeHandler", "../model/models"], (e, t, s, o, i) => { "use strict"; return e.extend("pharelyshau.controller.HanotoiTower", { onInit() { this.setModel(i.createHanoiTowerModel()); this.setModel(i.createHanoiTowerViewModel(), "view"); this.setupGame(); this.setDiscButtonMaxWidth(); o.register(this.getView(), this.setDiscButtonMaxWidth.bind(this)) }, setPegBoxHeight() { this.getModel("view").setProperty("/pegBoxHeight", null); setTimeout(() => { const e = this.getHtmlPegBox(); if (!e) { setTimeout(this.setPegBoxHeight.bind(this), 500); return } const t = e.clientHeight + 15; this.getModel("view").setProperty("/pegBoxHeight", t) }) }, setDiscButtonMaxWidth() { setTimeout(() => { const e = this.getHtmlPegBox(); if (!e) return; const t = e.clientWidth; this.getModel("view").setProperty("/discButtonMaxWidth", t) }) }, getHtmlPegBox() { const e = this.getView().getControlsByFieldGroupId("pegs"); const t = e.filter(e => e.hasStyleClass("phPegBox")); return t[0]?.getDomRef() }, onChangeDiscsCount() { this.setDiscCountToLocalStorage(); this.setupGame() }, setDiscCountToLocalStorage() { const e = this.getModel().getProperty("/DiscCount"); localStorage.setItem("discs", e) }, onPressRestartGame() { this.setupGame() }, onPressOpenRecordsDialog() { this.stopTimer(); this.openRecordsDialog() }, onChangeMoveButtonsSwith(e) { localStorage.setItem("moveButtons", e.getParameter("state")) }, onPressMoveDiscByBox(e) { let t = this.getObjectByEvent(e); const s = this.getModel("view").getProperty("/selectedPeg"); if (s && s !== t) { this.tryMovingDisc(s, t) } if (s) t = null; this.getModel("view").setProperty("/selectedPeg", t) }, onPressMoveDiscByButton(e) { const t = e.getSource().getParent(); const s = this.getObjectByControl(t); const o = this.getObjectByEvent(e); this.tryMovingDisc(s, o) }, onPressFirePegPress(e) { const t = e.getSource(); const s = t.getParent().getParent(); s.firePress() }, openRecordsDialog() { this.openDialog("RecordsDialog") }, onPressImrpoveResult(e) { const t = this.getObjectByEvent(e).DiscCount; this.getModel().setProperty("/DiscCount", t); this.setupGame(); s.closeAllDialogs() }, onPressCloseRecordsDialog() { this.oRecordsDialog.close() }, onAfterCloseRecordsDialog() { if (!this.isGameFinished()) this.startTimer() }, openWinDialog() { this.openDialog("WinDialog") }, onPressLevelUp() { let e = this.getModel().getProperty("/DiscCount"); this.getModel().setProperty("/DiscCount", ++e); this.setDiscCountToLocalStorage(); this.oWinDialog.close() }, onPressCloseWinDialog() { this.oWinDialog.close() }, onAfterCloseWinDialog() { this.setupGame(); this.getModel("view").setProperty("/previousRecord", null) }, setupGame() { this.getModel("view").setProperty("/selectedPeg", null); this.stopTimer(); this.resetTimeAndMoves(); this.setPegs(); this.setPegBoxHeight() }, resetTimeAndMoves() { this.getModel().setProperty("/Time", 0); this.getModel().setProperty("/Moves", 0) }, setPegs() { const e = [this.getDiscs(), [], []]; this.getModel().setProperty("/Pegs", e); this.getModel().refresh(true) }, getDiscs() { const e = this.getModel().getProperty("/DiscCount"); return [...Array(e)].map((e, t) => t + 1) }, tryMovingDisc(e, s) { if (e[0] > s[0] || !e.length) { t.show("This move is not possible"); return } this.startTimer(); this.moveDisc(e, s); this.increaseMoves(); this.checkGameWin(s) }, moveDisc(e, t) { t.unshift(e[0]); e.shift(); this.getModel().refresh(true) }, checkGameWin(e) { const t = this.getModel().getProperty("/DiscCount"); const s = this.getModel().getProperty("/Pegs"); const o = t === e.length; const i = s.indexOf(e) === s.length - 1; if (!o || !i) return; this.finishGame() }, finishGame() { this.stopTimer(); this.openWinDialog(); this.setNewRecord() }, setNewRecord() { const e = this.getModel().getProperty("/Records"); const t = this.getCurrentResult(); const s = e.find(e => e.DiscCount === t.DiscCount); this.setPreviousRecord({ ...s }); if (!s) { e.push(t) } else { this.updateExistingRecord(s, t) } this.getModel().refresh(true); localStorage.setItem("records", JSON.stringify(e)) }, setPreviousRecord(e) { this.getModel("view").setProperty("/previousRecord", null); this.getModel("view").setProperty("/previousRecord", e) }, updateExistingRecord(e, t) { e.Time = Math.min(e.Time, t.Time); e.Moves = Math.min(e.Moves, t.Moves) }, getCurrentResult() { return { DiscCount: this.getModel().getProperty("/DiscCount"), Time: this.getModel().getProperty("/Time"), Moves: this.getModel().getProperty("/Moves") } }, increaseMoves() { let e = this.getModel().getProperty("/Moves"); this.getModel().setProperty("/Moves", ++e) }, startTimer() { if (this.timerId) return; let e = this.getModel().getProperty("/Time"); this.timerId = setInterval(() => { this.getModel().setProperty("/Time", ++e) }, 1e3) }, stopTimer() { clearInterval(this.timerId); this.timerId = null }, isGameFinished() { const e = this.oWinDialog?.isOpen() ?? false; const t = this.getModel().getProperty("/Moves") > 0; return e || !t } }) });
    },
    "pharelyshau/controller/Home.controller.js": function () {
        sap.ui.define(["./BaseController", "sap/m/IllustrationPool"], (t, e) => { "use strict"; return t.extend("pharelyshau.controller.Home", { onInit() { this.registerIllustrationSet("tnt", "sap/tnt/themes/base/illustrations") }, registerIllustrationSet(t, s) { const r = { setFamily: t, setURI: sap.ui.require.toUrl(s) }; e.registerIllustrationSet(r, false) } }) });
    },
    "pharelyshau/controller/NotFound.controller.js": function () {
        sap.ui.define(["./BaseController"], e => { "use strict"; return e.extend("pharelyshau.controller.NotFound", { onInit() { } }) });
    },
    "pharelyshau/controller/Resume.controller.js": function () {
        sap.ui.define(["./BaseController", "../model/models", "../model/formatter"], (e, o, r) => { "use strict"; return e.extend("pharelyshau.controller.Resume", { formatter: r, onInit() { this.setModel(o.createResumeModel()) }, onPressDownloadResume() { const e = "/resource/file/Resume Pavel Harelyshau.pdf"; sap.m.URLHelper.redirect(e, true) }, onPressOpenRelocationPopover(e) { const o = e.getSource(); const r = "/RelocationPreference"; this.openPopover("RelocationPopover", o, r) }, onPressCloseRelocationPopover() { this.oRelocationPopover.close() }, onPressOpenCompanyPopover(e) { const o = e.getSource(); const r = this.getPathByEvent(e) + "/Company"; this.openPopover("CompanyPopover", o, r) }, onPressCloseCompanyPopover(e) { this.oCompanyPopover.close() } }) });
    },
    "pharelyshau/fragment/Calendar/AppointmentDialog.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><Dialog stretch="{device>/system/phone}" resizable="true" draggable="true"\n        afterClose="onAfterCloseAppointmentDialog"><customHeader><Toolbar style="Clear"><Title class="phNoMargin" text="{= ${ID} === \'new\'\n                    ? ${i18n>ttlMakeAppointment} : ${i18n>ttlEditAppointment} }"/><ToolbarSpacer/><Button visible="{device>/system/phone}" tooltip="{i18n>btnClose}"\n                    press="onPressCloseAppointmentDialog" icon="{i18n>iClose}"/></Toolbar></customHeader><VBox class="sapUiSmallMarginBeginEnd"><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lTitle}:" labelFor="inpName"/><Input id="inpName" value="{Name}" valueLiveUpdate="true"\n                    placeholder="{i18n>phAppointmentTitle}"/></VBox><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lYourEmail}:" labelFor="inpEmail"/><Input id="inpEmail" required="true" type="Email" placeholder="{i18n>phEmail}"\n                    value="{path: \'Email\', type: \'sap.ui.model.type.String\',\n                        constraints: {search: \'^((?!\\\\.)[\\\\w-_.]*[^.])(@\\\\w+)(\\\\.\\\\w+(\\\\.\\\\w+)?[^.\\\\W])$\'} }"/></VBox><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lDateAndTime}:"/><HBox justifyContent="SpaceBetween"\n                    renderType="Bare" wrap="{= ${device>/system/phone} ? \'Wrap\' : \'NoWrap\' }"><Label width="0" text="{i18n>lStartDate}" labelFor="dtpStartDate"/><DateTimePicker id="dtpStartDate" change="onChangePicker($event ,\'StartDate\')"\n                        required="true" minutesStep="15" showCurrentDateButton="true"\n                        minDate="{= ${ID} === \'new\' ? ${view>/currentDate} : null }"\n                        value="{path: \'StartDate\', mode: \'OneWay\', type: \'sap.ui.model.type.DateTime\',\n                            formatOptions: {style: \'medium/short\'}}"/><Label visible="{= !${device>/system/phone} }" text="—"\n                        class="sapUiTinyMarginBeginEnd sapUiTinyMarginTop"/><Label width="0" text="{i18n>lEndDate}" labelFor="dtpEndDate"/><DateTimePicker id="dtpEndDate" change="onChangePicker($event ,\'EndDate\')"\n                        required="true" minutesStep="15" minDate="{StartDate}" showCurrentDateButton="true"\n                        value="{path: \'EndDate\', mode: \'OneWay\', type: \'sap.ui.model.type.DateTime\',\n                            formatOptions: {style: \'medium/short\'}}"/></HBox></VBox><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lConference}:"/><VBox visible="{= !${GoogleMeet}}"><Input id="inpConference" value="{Conference}" type="Url"\n                        valueState="{path: \'Conference\', formatter: \'.formatter.conferenceState\'}"\n                        valueStateText="{path: \'Conference\', formatter: \'.formatter.conferenceStateText\'}"\n                        placeholder="{i18n>phConference}"/><Button text="{i18n>btnAddGoogleMeet}" width="100%" iconDensityAware="false"\n                        icon="/resource/image/GoogleMeetIcon.svg" press="onPressAddGoogleMeet"\n                        class="phButton"/></VBox><VBox visible="{= !!${GoogleMeet} }"><HBox justifyContent="SpaceBetween" renderType="Bare"><HBox visible="{= ${GoogleMeet} === \'willBeCreated\' }"\n                            alignItems="Center" class="sapUiTinyMarginEnd" renderType="Bare"><Avatar src="/resource/image/GoogleMeetIcon.svg" displaySize="Custom"\n                                customDisplaySize="1.5rem" class="sapUiTinyMarginEnd"/><Text text="{i18n>tGoogleMeetWillBeGenerated}"/></HBox><HBox visible="{= ${GoogleMeet} !== \'willBeCreated\' }" width="80%" renderType="Bare"><Button text="{i18n>btnJoinWithGoogleMeet}" press="onPressJoinToConference"\n                                icon="/resource/image/GoogleMeetIcon.svg" iconDensityAware="false"\n                                class="phButton"/></HBox><Button icon="{i18n>iClose}" tooltip="Remove Google Meet conferencing"\n                            press="onPressRemoveGoogleMeet" type="Transparent"/></HBox><Label visible="{= ${GoogleMeet} !== \'willBeCreated\' }" text="{GoogleMeet}"/></VBox></VBox><VBox class="sapUiSmallMarginTopBottom"><Label text="{i18n>lAgenda}:" labelFor="inpDescription"/><TextArea id="inpDescription" width="100%" value="{Description}" valueLiveUpdate="true"\n                    rows="4" placeholder="{i18n>phAgenda}"/></VBox></VBox><beginButton><Button text="{= ${ID} === \'new\' ? ${i18n>btnMake} : ${i18n>btnSave} }"\n                press="onPressCreateEditAppointment" type="Emphasized"/></beginButton><endButton><Button visible="{= !${device>/system/phone} }" text="{i18n>btnCancel}"\n                press="onPressCloseAppointmentDialog"/></endButton></Dialog></core:FragmentDefinition>',
    "pharelyshau/fragment/Calendar/AppointmentPopover.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><ResponsivePopover placement="Auto" horizontalScrolling="false" contentWidth="22rem"><customHeader><Toolbar width="{= ${device>/system/phone} ? \'auto\' : \'22rem\' }"\n                style="Clear" class="phNoPaddingBegin"><Title visible="{device>/system/phone}" class="phNoMargin"\n                    text="{= !${Name} || !${Name}.trim() ? ${i18n>ttlNoAppointmentName} : ${Name} }"/><Title visible="{= !${device>/system/phone} }" class="sapUiSmallMarginBegin"\n                    text="{= !${Name} || !${Name}.trim() ? ${i18n>ttlNoAppointmentName} : ${Name} }"/><ToolbarSpacer/><Button tooltip="{i18n>btnClose}" press="onPressCloseAppointmentPopover"\n                    icon="{i18n>iClose}"/></Toolbar></customHeader><VBox class="sapUiSmallMarginBeginEnd"><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lYourEmail}:"/><Text text="{Email}" emptyIndicatorMode="On"/></VBox><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lDateAndTime}:"/><HBox><Text text="{path: \'StartDate\', type: \'sap.ui.model.type.DateTime\', formatOptions: {style: \'medium/short\'} } &#160;–&#160;\n                        {= ${StartDate}.getDate() === ${EndDate}.getDate() &amp;&amp;\n                            ${StartDate}.getMonth() === ${EndDate}.getMonth() &amp;&amp;\n                            ${StartDate}.getFullYear() === ${EndDate}.getFullYear()\n                            ? ${path: \'EndDate\', type: \'sap.ui.model.type.Time\', formatOptions: {style: \'short\'} }\n                            : ${path: \'EndDate\', type: \'sap.ui.model.type.Time\', formatOptions: {style: \'short\'} }\n                                + \', \' + ${path: \'EndDate\', type: \'sap.ui.model.type.Date\', formatOptions: {style: \'medium\'} } }"/></HBox></VBox><VBox class="sapUiSmallMarginTop"><Label text="{i18n>lConference}:"/><VBox visible="{= !!${GoogleMeet} || !!${Conference} }"><HBox justifyContent="SpaceBetween" renderType="Bare"><HBox width="80%" renderType="Bare"><Button enabled="{= !${GoogleMeet} || ${GoogleMeet} !== \'willBeCreated\' }"\n                                press="onPressJoinToConference" iconDensityAware="false" class="phButton"\n                                text="{= ${GoogleMeet} ? ${i18n>btnJoinWithGoogleMeet} : ${i18n>btnJoinToConference} }"\n                                icon="{= ${GoogleMeet} ? \'/resource/image/GoogleMeetIcon.svg\' : \'sap-icon://video\' }"/></HBox><Button enabled="{= !${GoogleMeet} || ${GoogleMeet} !== \'willBeCreated\' }"\n                            icon="{i18n>iCopy}" press="onPressCopyConferenceLink" type="Transparent"/></HBox><Label text="{= !${GoogleMeet} ? ${Conference} : ${GoogleMeet} !== \'willBeCreated\' \n                        ? ${GoogleMeet} : ${i18n>lLinkWillBeAvailableSoon} }"/></VBox><Text visible="{= !${GoogleMeet} &amp;&amp; !${Conference} }" text="–"/></VBox><VBox class="sapUiSmallMarginTopBottom" width="100%"><Label text="{i18n>lAgenda}:"/><ExpandableText text="{Description}" maxCharacters="256" emptyIndicatorMode="On"/></VBox></VBox><beginButton><Button text="{i18n>btnEdit}" press="onPressEditOpenAppointmentDialog" type="Emphasized"\n                enabled="{= ${ID} !== \'new\'}"/></beginButton><endButton><Button text="{i18n>btnDelete}" press="onPressRemoveAppointment"\n                enabled="{= ${ID} !== \'new\'}"/></endButton></ResponsivePopover></core:FragmentDefinition>',
    "pharelyshau/fragment/Calendar/ThreeDaysView.js": function () {
        sap.ui.define(["sap/m/SinglePlanningCalendarView"], e => { "use strict"; return e.extend("pharelyshau.fragment.calenar.ThreesDaysView", { getEntityCount() { return 3 }, getScrollEntityCount() { return 3 }, calculateStartDate(e) { return e } }) });
    },
    "pharelyshau/fragment/Calendar/TwoDaysView.js": function () {
        sap.ui.define(["sap/m/SinglePlanningCalendarView"], e => { "use strict"; return e.extend("pharelyshau.fragment.calenar.TwoDaysView", { getEntityCount() { return 2 }, getScrollEntityCount() { return 2 }, calculateStartDate(e) { return e } }) });
    },
    "pharelyshau/fragment/HanoiTower/Instructions.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><Panel><headerToolbar><Toolbar height="3rem"><ToolbarSpacer/><core:Icon src="sap-icon://activity-items"/><Title text="Instructions"/><ToolbarSpacer/></Toolbar></headerToolbar><VBox class="sapUiTinyMarginTopBottom"><VBox><HBox><core:Icon src="sap-icon://puzzle" class="sapUiTinyMarginEnd"/><Title titleStyle="H6" text="Game Description:" wrapping="true"/></HBox><Text text="The Tower of Hanoi (also called The problem of Benares Temple or Tower of Brahma or Lucas\' Tower and sometimes pluralized as Towers, or simply pyramid puzzle) is a mathematical game or puzzle consisting of three pegs and a number of disks of various diameters, which can slide onto any rod. The puzzle begins with the disks stacked on one rod in order of decreasing size, the smallest at the top, thus approximating a conical shape."/></VBox><VBox class="sapUiSmallMarginTop"><HBox><core:Icon src="sap-icon://target-group" class="sapUiTinyMarginEnd"/><Title titleStyle="H6" text="Objective:" wrapping="true"/></HBox><Text text="The objective of the puzzle is to move the entire stack to the last rod."/></VBox><VBox class="sapUiSmallMarginTop"><HBox><core:Icon src="sap-icon://activities" class="sapUiTinyMarginEnd"/><Title titleStyle="H6" text="Rules:" wrapping="true"/></HBox><Text text="1) Only one disk may be moved at a time."/><Text text="2) No disk may be placed on top of a disk that is smaller than it."/></VBox><VBox class="sapUiSmallMarginTop"><HBox><core:Icon src="sap-icon://example"/><Title titleStyle="H6" text="Example:" class="sapUiTinyMarginBegin"/></HBox><Image width="100%" src="./resource/image/HanoiTowerEx_{app>/theme}.jpg" class="sapUiTinyMarginTop"/></VBox></VBox></Panel></core:FragmentDefinition>',
    "pharelyshau/fragment/HanoiTower/RecordsDialog.fragment.xml": '<core:FragmentDefinition\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"\n    core:require="{formatter: \'pharelyshau/model/formatter\'}"><Dialog title="Your Records" icon="sap-icon://competitor" afterClose="onAfterCloseRecordsDialog"\n        class="phRecordsDialog"><List items="{/Records}" visible="{= ${/Records}.length > 0}"><CustomListItem class="phNoFocus"><HBox wrap="Wrap" alignItems="Center" class="sapUiSmallMargin" justifyContent="SpaceBetween"><VBox class="sapUiSmallMarginEnd" renderType="Bare"><Title text="Tower of {DiscCount} Discs" titleStyle="H6"/><HBox renderType="Bare" alignItems="Center" class="sapUiTinyMarginTop"><HBox renderType="Bare" alignItems="Center"><core:Icon src="sap-icon://fob-watch"/><Text text="Time: {path: \'Time\', formatter: \'formatter.timeMinSec\'}" class="sapUiTinyMarginBegin"/></HBox><HBox alignItems="Center" renderType="Bare" class="sapUiSmallMarginBegin"\n                                tooltip="{= ${Moves} === Math.pow(2, ${DiscCount}) - 1 ? \'You did it in the minimum number of moves\' : \'\' }"><core:Icon src="sap-icon://step"\n                                    color="{= ${Moves} === Math.pow(2, ${DiscCount}) - 1 ? \'Positive\' : \'\' }"/><Text text="Moves: {Moves}" class="sapUiTinyMarginBegin"/></HBox></HBox></VBox><Button icon="sap-icon://activate" tooltip="Try to Improve" press="onPressImrpoveResult"/></HBox></CustomListItem></List><IllustratedMessage visible="{= ${/Records}.length === 0}" illustrationSize="Spot"\n            title="You have not any Records yet" illustrationType="sapIllus-SuccessBalloon"\n            description="Complete at least on Tower to see Record"/><endButton><Button text="Close" press="onPressCloseRecordsDialog"/></endButton></Dialog></core:FragmentDefinition>',
    "pharelyshau/fragment/HanoiTower/WinDialog.fragment.xml": '<core:FragmentDefinition\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"\n    core:require="{formatter: \'pharelyshau/model/formatter\'}"><Dialog title="You dealt with Tower of {/DiscCount} Disks" state="Success" afterClose="onAfterCloseWinDialog"><VBox class="sapUiSmallMargin"><VBox renderType="Bare"><Title text="Your Result:" titleStyle="H6"/><HBox class="sapUiTinyMarginTop"><HBox renderType="Bare" alignItems="Center"><core:Icon src="sap-icon://fob-watch"/><Text text="Time: {path: \'/Time\', formatter: \'formatter.timeMinSec\'}" class="sapUiTinyMarginBegin"/></HBox><HBox renderType="Bare" alignItems="Center" class="sapUiSmallMarginBegin"\n                        tooltip="{= ${/Moves} === Math.pow(2, ${/DiscCount}) - 1 ? \'You did it in the minimum number of moves\' : \'\' }"><core:Icon src="sap-icon://step"\n                            color="{= ${/Moves} === Math.pow(2, ${/DiscCount}) - 1 ? \'Positive\' : \'\' }"/><Text text="Moves: {/Moves}" class="sapUiTinyMarginBegin"/></HBox></HBox></VBox><VBox class="sapUiSmallMarginTop" renderType="Bare" visible="{= !!${view>/previousRecord}\n                &amp;&amp; (${view>/previousRecord/Time} > ${/Time} || ${view>/previousRecord/Moves} > ${/Moves}) }"><Title text="New Record:" titleStyle="H6"/><HBox class="sapUiTinyMarginTop"><HBox visible="{= ${view>/previousRecord/Time} > ${/Time} }"\n                        renderType="Bare" alignItems="Center" class="sapUiSmallMarginEnd"><core:Icon src="sap-icon://fob-watch" class="sapUiTinyMarginEnd"/><Text text="{= ${view>/previousRecord/Time} - ${/Time} } sec faster"/></HBox><HBox visible="{= ${view>/previousRecord/Moves} > ${/Moves} }"\n                        renderType="Bare" alignItems="Center"><core:Icon src="sap-icon://step" class="sapUiTinyMarginEnd"/><Text text="{= ${view>/previousRecord/Moves} - ${/Moves} } moves fewer"/></HBox></HBox><Button text="See Your Records" icon="sap-icon://competitor"\n                    press="onPressOpenRecordsDialog" class="sapUiTinyMarginTop"/></VBox></VBox><beginButton><Button text="Level UP" press="onPressLevelUp" icon="sap-icon://collapse-group" type="Emphasized"/></beginButton><endButton><Button text="Restart" icon="sap-icon://restart" press="onPressCloseWinDialog"/></endButton></Dialog></core:FragmentDefinition>\n',
    "pharelyshau/fragment/OverflowMenu.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><Menu title="{i18n>ttlMenu}"><MenuItem visible="{= ${app>/page} !== \'Home\' }"\n            text="{i18n>btnGoHome}" press="onPressNavigateToPage(\'Home\')" icon="{i18n>iHome}"/><MenuItem visible="{= ${app>/page} !== \'Calendar\'\n            &amp;&amp; !(${app>/page} === \'Resume\' &amp;&amp; (!${device>/system/phone} &amp;&amp; ${device>/resize/width} > 550) )  }"\n            text="{i18n>btnMakeAppointment}" press="onPressNavigateToPage(\'Calendar\')" icon="{i18n>iAppointment}"/><MenuItem visible="{= ${app>/page} !== \'Resume\' }"\n            text="{i18n>btnSeeResume}" press="onPressNavigateToPage(\'Resume\')" icon="{i18n>iResume}"/><MenuItem visible="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n            || (850 >= ${device>/resize/width} &amp;&amp; ${app>/page} === \'Resume\')\n            || ${app>/page} === \'Home\' }"\n            text="{i18n>btnSendEmail}" press="onPressSendEmail" icon="{i18n>iEmail}"/><MenuItem visible="{= ${app>/page} === \'Resume\' }" text="{i18n>btnDownloadResume}" \n            press="onPressDownloadResume" icon="{i18n>iDownload}"/><MenuItem visible="{= ${app>/page} !== \'HanoiTower\' }" text="{i18n>btnPlayHanoiTower}" \n            press="onPressNavigateToPage(\'HanoiTower\')" icon="{i18n>iPuzzle}"/><MenuItem text="{i18n>btnApperance}" icon="{i18n>iApperance}" \n            startsSection="{device>/system/phone}"><MenuItem text="{i18n>btnLightMode}" icon="{i18n>iLightMode}"\n                press="onPressSetTheme(\'light\')"/><MenuItem text="{i18n>btnDarkMode}" icon="{i18n>iDarkMode}"\n                press="onPressSetTheme(\'dark\')"/><MenuItem text="{i18n>btnHighContrastWhiteMode}" press="onPressSetTheme(\'hcw\')"\n                icon="{= ${app>/theme} === \'light\' || ${app>/theme} === \'hcw\'  ? ${i18n>iHighContrastMode1} : ${i18n>iHighContrastMode2} }"/><MenuItem text="{i18n>btnHighContrastBlackMode}" press="onPressSetTheme(\'hcb\')"\n                icon="{= ${app>/theme} !== \'light\' &amp;&amp; ${app>/theme} !== \'hcw\'  ? ${i18n>iHighContrastMode1} : ${i18n>iHighContrastMode2} }"/><MenuItem text="{i18n>btnAutoMode}" press="onPressSetTheme(null)"\n                icon="{i18n>iSystemSettings}"/></MenuItem><MenuItem text="{i18n>btnLanguage}" icon="{i18n>iLanguage}"><MenuItem text="{i18n>btnEnglish}" press="onPressSetLanguage(\'en\')"/><MenuItem text="{i18n>btnRussian}" press="onPressSetLanguage(\'ru\')"/><MenuItem text="{i18n>btnGerman}" press="onPressSetLanguage(\'de\')"/></MenuItem><MenuItem text="{i18n>btnShareLink}" press="onPressShareLink"\n            icon="{i18n>iShare}" startsSection="{device>/system/phone}"/><MenuItem text="{i18n>btnSeeCode}" press="onPressShowCode"\n            icon="{i18n>iCode}"/></Menu></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/CompanyPopover.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><Popover contentWidth="20rem" placement="Auto"><customHeader><Toolbar style="Clear"><Title text="{Name}"/><ToolbarSpacer/><Button tooltip="Close" press="onPressCloseCompanyPopover"\n                    icon="{i18n>iClose}"/></Toolbar></customHeader><VBox class="sapUiTinyMargin"><HBox visible="{= !!${Website} }" wrap="Wrap"><Label text="{i18n>lWebsite}:" class="sapUiTinyMarginEnd"/><Link text="{Website}" href="{Website}" target="_blank"/></HBox><Text visible="{= !!${Description} }" text="{Description}"/></VBox></Popover></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/Education.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><VBox><HBox alignItems="{= ${device>/system/phone} || 550 >= ${device>/resize/width} ? \'Start\' : \'Center\'}"><Avatar src="{Logo}" displayShape="Square"\n                decorative="true" class="sapUiTinyMarginEnd"/><VBox><Title text="{Name}" wrapping="true"/><Text text="{Description}"/></VBox></HBox><Toolbar visible="{= ${/Education}.indexOf(${}) !== ${/Education}.length - 1 }"\n            height="0.8rem" class="phToolbarSeparator sapUiTinyMarginBottom"/></VBox></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/Experience.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><VBox><HBox alignItems="{= ${device>/system/phone} || 550 >= ${device>/resize/width} ? \'Start\' : \'Center\' }"><Avatar visible="{= !!${Company/Description} || !!${Company/Website} }"\n                src="{Company/Logo}" press="onPressOpenCompanyPopover"\n                displayShape="Square" fallbackIcon="{i18n>iExperience}"\n                ariaHasPopup="Dialog" class="sapUiTinyMarginEnd"/><Avatar visible="{= !${Company/Description} &amp;&amp; !${Company/Website} }"\n                src="{Company/Logo}" displayShape="Square" decorative="true"\n                fallbackIcon="{i18n>iExperience}" class="sapUiTinyMarginEnd"/><FlexBox direction="{= ${device>/system/phone} || 550 >= ${device>/resize/width} ? \'Column\' : \'Row\' }"\n                alignItems="{= ${device>/system/phone} || 550 >= ${device>/resize/width} ? \'Start\' : \'Center\' }"\n                justifyContent="SpaceBetween" width="100%"><VBox><Title text="{Position}" wrapping="true"/><Text text="{= ${Company/Location} ? ${Company/Name} + \', \' + ${Company/Location} : ${Company/Name}}"/></VBox><VBox visible="{= !${device>/system/phone} &amp;&amp; ${device>/resize/width} > 550 }"\n                    alignItems="End" class="sapUiTinyMarginTop"><Label text="{path: \'StartDate\', formatter: \'.formatter.stringDate\'} – {path: \'EndDate\',  formatter: \'.formatter.stringDate\'}"/><Label text="{parts: [\'StartDate\', \'EndDate\'], formatter: \'.formatter.datesPeriod\'}"/></VBox><Label visible="{= ${device>/system/phone} || 550 >= ${device>/resize/width} }" wrapping="true"\n                    text="{path: \'StartDate\',  formatter: \'.formatter.stringDate\'} – {path: \'EndDate\',  formatter: \'.formatter.stringDate\'} ({parts: [\'StartDate\', \'EndDate\'], formatter: \'.formatter.datesPeriod\'})"/></FlexBox></HBox><Text visible="{= !!${Description} }" text="{Description}"/><VBox visible="{= ${Projects}.length > 0}"><Label text="{= ${Projects}.length > 1 ? ${i18n>lProjects} : ${i18n>lProject} }:" /><VBox items="{path: \'Projects\', templateShareable: false}"><Text text="• &#160;{}"/></VBox></VBox><Label text="{i18n>lResponsobilities}:" class="sapUiTinyMarginTop"/><VBox items="{path: \'Responsobilities\', templateShareable: false}"><Text text="• &#160;{}"/></VBox><VBox visible="{= ${Achievements}.length > 0}"><Label text="{i18n>lAchievements}:" class="sapUiTinyMarginTop"/><VBox items="{path: \'Achievements\', templateShareable: false}"><Text text="• &#160;{}"/></VBox></VBox><Label text="{i18n>lSkills}:" class="sapUiTinyMarginTop sapUiTinyMarginEnd"/><Text text="{Skills}"/><Toolbar visible="{= ${/Experience}.indexOf(${}) !== ${/Experience}.length - 1 }"\n            height="0.8rem" class="phToolbarSeparator sapUiTinyMarginBottom"/></VBox></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/RelocationPopover.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"\n    core:require="{ formatMessage: \'sap/base/strings/formatMessage\' }"><Popover contentWidth="20rem" placement="Auto"><customHeader><Toolbar style="Clear"><Title text="{i18n>ttlRelocationTo} {Country}"/><ToolbarSpacer/><Button tooltip="{i18n>btnClose}" press="onPressCloseRelocationPopover"\n                    icon="{i18n>iClose}"/></Toolbar></customHeader><VBox class="sapUiTinyMargin"><Text text="{Description}"/><FormattedText class="sapUiTinyMarginTop" htmlText="{i18n>tForMoreInfo}\n                {parts: [\'i18n>linkWithText\', \'Link\', \'LinkText\'], formatter: \'formatMessage\'}"/></VBox></Popover></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/SkillsByType.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><FlexBox direction="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n        ? \'Column\' : \'Row\' }"><Label wrapping="true" text="{Type}:"\n            width="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n                ? \'auto\' : \'12rem\' }"/><Text text="{Skills}" /></FlexBox></core:FragmentDefinition>',
    "pharelyshau/fragment/Resume/SubTitle.fragment.xml": '<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"><HBox wrap="Wrap"><Label text="{/Position} /&#160;"/><Label text="{i18n>lWilling}&#160;"/><Link text="{i18n>linkRelocateTo} {/RelocationPreference/Country}"\n            press="onPressOpenRelocationPopover" accessibleRole="Button" ariaHasPopup="Dialog"/></HBox></core:FragmentDefinition>',
    "pharelyshau/i18n/i18n_de.properties": 'appTitle = Pavel Harelyshau\nappDescription = Software Engineer\n\nttlSummary = ZUSAMMENFASSUNG',
    "pharelyshau/i18n/i18n_en.properties": 'appTitle = Pavel Harelyshau\nappDescription = Frontend Developer\n\n######################################\n############## NOTATIONS #############\n######################################\n# ttl = Title\n# l = Label\n# t = Text\n# msg = Message\n# ph = Placeholder\n# btn = Button\n# i = Icon\n# \\u00A0 = non-breaking space\n\n######################################\n################ HOME ################\n######################################\n# Titles\nttlWelcome = Hello and Welcome to harelyshau.dev!\nttlOverview = Project Overview\nttlCalendar = Calendar\nttlResume = Resume\nttlHanoiTower = Hanoi Tower\n# Texts\ntWelcomeDescription = This product is created and maintained by <a href="https://harelyshau.dev/#/resume">Pavel Harelyshau</a>. Currently, the project is still being developed, so any feedbacks and suggestions are welcome.\ntOverview = harelyshau.dev is a frontend project based on OpenUI5 framework. The application consists of 4 main pages: Home (which you are currently on), <a href="https://harelyshau.dev/#/calendar">Calendar</a>, <a href="https://harelyshau.dev/#/resume">Resume</a> and <a href="https://harelyshau.dev/#/hanoitower">Hanoi Tower</a>. The application supports 3 languages: English, German and Russian. You can also choose the theme of the interface that is convenient for you.\ntCalendarOverview = This page allows users to make, edit and delete appointments with me, and find the right time based on my busy schedule. It uses integration with Google Calendar using the API.\ntResumeOverview = This page contains information about me as a professional. It uses a JSON Model to display data from a file and bind repeating fragments.\ntHanoiTowerOverview = Here you can try yourself in the classic pyramid puzzle up to the tower of 20 discs. You can also track your progress by time and moves with the Records feature that saves your best scores.\n# Labels\nlHomePage = Homepage\n\n######################################\n############### RESUME ###############\n######################################\n# Titles\nttlSummary = SUMMARY\nttlSkills = KEY SKILLS\nttlExperience = EXPRERIENCE\nttlEducation = EDUCATION\nttlCourses = PROFESSIONAL DEVELOPMENT\nttlAchievements = ACHIEVEMENTS\nttlLanguages = LANGUAGES\nttlRelocationTo = Relocation to\n# Labels\nlWebsite = Website\nlProjects = Projects\nlProject = Project\nlWilling = Willing to\nlResponsobilities = Responsobilities\nlAchievements = Achievements\nlSkills = Skills\nlYear = year\nlYears = years\nlYearPlural = years\nlMonth = month\nlMonths = months\nlMonthPlural = months\nlPresent = Present\n# Links\nlinkRelocateTo = relocate to\nlinkWithText = <a href={0}>{1}</a>\n# Texts\ntForMoreInfo = For more information, see\n\n######################################\n############## CALENDAR ##############\n######################################\n# Titles\nttlPavelsCalendar = Pavel\'s Calendar\n\'\nttlDay = Day\nttl2Days = 2 Days\nttl3Days = 3 Days\nttlWorkWeek = Work Week\nttlWeek = Week\nttlMonth = Month\nttlNoAppointmentName = Untitled Appointment\nttlMakeAppointment = Make Appointment\nttlEditAppointment = Edit Appointment\n# Labels\nlShowsAppointmentsFor = Shows Appointments for\nlTitle = Title\nlYourEmail = Your Email\nlDateAndTime = Date & Time\nlStartDate = Start Date\nlEndDate = End Date\nlConference = Conference\nlAgenda = Agenda\nlLinkWillBeAvailableSoon = Link will be available in few seconds\n# Messages\nmsgBusyAtThisTime = I am busy at this time\nmsgStartDateMustBeInFuture = Start date must be in the future\nmsgFillEmail = Please fill out your email\nmsgInvalidEmail = Please enter correct email\nmsgCopied = Successfully copied to clipboard\nmsgNotCopied = Could not copy\n# Placeholders\nphAppointmentTitle = Topic of the appointment\nphAgenda = Some points to discuss and additional info\nphConference = Add link to Conference or add Google Meet\nphEmail = your@email.com\n# Texts\ntBusy = Busy\ntGoogleMeetWillBeGenerated = Google Meet conference will be generated\n\n######################################\n############### BUTTONS ##############\n######################################\nbtnDownloadResume = Download Resume\nbtnSendEmail = Send Email\nbtnApperance = Apperance\nbtnLightMode = Light\nbtnDarkMode = Dark\nbtnHighContrastWhiteMode = High Contrast White\nbtnHighContrastBlackMode = High Contrast Black\nbtnAutoMode = Auto (Device theme)\nbtnLanguage = Language\nbtnEnglish = \\ud83c\\uddec\\ud83c\\udde7\\u00A0 English\nbtnRussian = \\ud83c\\uddf7\\ud83c\\uddfa\\u00A0 \\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\nbtnGerman = \\ud83c\\udde9\\ud83c\\uddea\\u00A0 Deutsch\nbtnShareLink = Share Link\nbtnSeeCode = See App Code\nbtnClose = Close\nbtnMakeAppointment = Make Appointment\nbtnMake = Make\nbtnShowWorkingHours = Show Working Hours\nbtnShowFullDay = Show Full Day\nbtnSeeResume = See Resume\nbtnGoHome = Go to Homepage\nbtnSave = Save\nbtnCancel = Cancel\nbtnEdit = Edit\nbtnDelete = Delete\nbtnAddGoogleMeet = Add Google Meet video conferencing\nbtnJoinWithGoogleMeet = Join with Google Meet\nbtnJoinToConference = Join to Conference\nbtnPlayHanoiTower = Play Hanoi Tower\n\n######################################\n############### ICONS ################\n######################################\niMobileMenu = sap-icon://menu2\niOverflowMenu = sap-icon://overflow\niApperance = sap-icon://palette\niLightMode = sap-icon://light-mode\niDarkMode = sap-icon://dark-mode\niHighContrastMode1 = sap-icon://rhombus-milestone\niHighContrastMode2 = sap-icon://rhombus-milestone-2\niSystemSettings = sap-icon://developer-settings\niLanguage = sap-icon://hello-world\niShare = sap-icon://action\niCode = sap-icon://syntax\niDownload = sap-icon://download\niEmail = sap-icon://email\niClose = sap-icon://decline\niExperience = sap-icon://suitcase\niAppointment = sap-icon://appointment\niResume = sap-icon://business-card\niHome = sap-icon://home\niMoreTime = sap-icon://create-entry-time\niCopy = sap-icon://copy\niPuzzle = sap-icon://puzzle\n\n######################################\n############### COMMON ###############\n######################################\n# Titles\nttlMenu = Menu\nttlPageNotFound = Page was Not Found\n# Messages\nmsgSiteUrlCopied = Website URL {0} successfully copied to clipboard\nmsgSiteUrlNotCopied = Could not copy Website URL',
    "pharelyshau/i18n/i18n_ru.properties": 'appTitle = \\u041f\\u0430\\u0432\\u0435\\u043b \\u0413\\u043e\\u0440\\u0435\\u043b\\u044b\\u0448\\u0435\\u0432\nappDescription = \\u0424\\u0440\\u043e\\u043d\\u0442\\u0435\\u043d\\u0434 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u0447\\u0438\\u043a\n\n######################################\n############## NOTATIONS #############\n######################################\n# ttl = Title\n# l = Label\n# t = Text\n# msg = Message\n# ph = Placeholder\n# btn = Button\n# i = Icon\n# \\u00A0 = non-breaking space\n\n######################################\n################ HOME ################\n######################################\n# Titles\nttlWelcome = \\u0414\\u043e\\u0431\\u0440\\u043e \\u043f\\u043e\\u0436\\u0430\\u043b\\u043e\\u0432\\u0430\\u0442\\u044c \\u043d\\u0430 harelyshau.dev!\nttlOverview = \\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430\nttlCalendar = \\u041a\\u0430\\u043b\\u0435\\u043d\\u0434\\u0430\\u0440\\u044c\nttlResume = \\u0420\\u0435\\u0437\\u044e\\u043c\\u0435\nttlHanoiTower= \\u0425\\u0430\\u043d\\u043e\\u0439\\u0441\\u043a\\u0430\\u044f \\u0431\\u0430\\u0448\\u043d\\u044f\n# Texts\ntWelcomeDescription = \\u042d\\u0442\\u043e\\u0442 \\u043f\\u0440\\u043e\\u0434\\u0443\\u043a\\u0442 \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d \\u0438 \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442\\u0441\\u044f <a href="https://harelyshau.dev/#/resume">\\u041f\\u0430\\u0432\\u043b\\u043e\\u043c \\u0413\\u043e\\u0440\\u0435\\u043b\\u044b\\u0448\\u0435\\u0432\\u044b\\u043c</a>. \\u0412 \\u043d\\u0430\\u0441\\u0442\\u043e\\u044f\\u0449\\u0435\\u0435 \\u0432\\u0440\\u0435\\u043c\\u044f \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u0432\\u0441\\u0435 \\u0435\\u0449\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u0438\\u0442\\u0441\\u044f \\u0432 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043e\\u0442\\u043a\\u0435, \\u043f\\u043e\\u044d\\u0442\\u043e\\u043c\\u0443 \\u043b\\u044e\\u0431\\u044b\\u0435 \\u043a\\u043e\\u043c\\u043c\\u0435\\u043d\\u0442\\u0430\\u0440\\u0438\\u0438 \\u0438 \\u043f\\u0440\\u0435\\u0434\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f \\u043f\\u0440\\u0438\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u044e\\u0442\\u0441\\u044f.\ntOverview = harelyshau.dev \\u2014 \\u044d\\u0442\\u043e frontend \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442 \\u043d\\u0430 OpenUI5 \\u0444\\u0440\\u0435\\u0439\\u043c\\u0432\\u043e\\u0440\\u043a\\u0435. \\u041f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0435 \\u0441\\u043e\\u0441\\u0442\\u043e\\u0438\\u0442 \\u0438\\u0437 4 \\u043e\\u0441\\u043d\\u043e\\u0432\\u043d\\u044b\\u0445 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446: \\u0414\\u043e\\u043c\\u0430\\u0448\\u043d\\u044f\\u044f (\\u043d\\u0430 \\u043a\\u043e\\u0442\\u043e\\u0440\\u043e\\u0439 \\u0432\\u044b \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043d\\u0430\\u0445\\u043e\\u0434\\u0438\\u0442\\u0435\\u0441\\u044c), <a href="https://harelyshau.dev/#/calendar">\\u041a\\u0430\\u043b\\u0435\\u043d\\u0434\\u0430\\u0440\\u044c</a>, <a href="https://harelyshau.dev/#/resume">\\u0420\\u0435\\u0437\\u044e\\u043c\\u0435</a> \\u0438 <a href="https://harelyshau.dev/#/hanoitower">\\u0425\\u0430\\u043d\\u043e\\u0439\\u0441\\u043a\\u0430\\u044f \\u0431\\u0430\\u0448\\u043d\\u044f</a>. \\u041f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0435 \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 3 \\u044f\\u0437\\u044b\\u043a\\u0430: \\u0430\\u043d\\u0433\\u043b\\u0438\\u0439\\u0441\\u043a\\u0438\\u0439, \\u043d\\u0435\\u043c\\u0435\\u0446\\u043a\\u0438\\u0439 \\u0438 \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439. \\u0412\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0432\\u044b\\u0431\\u0440\\u0430\\u0442\\u044c \\u0443\\u0434\\u043e\\u0431\\u043d\\u0443\\u044e \\u0434\\u043b\\u044f \\u0432\\u0430\\u0441 \\u0442\\u0435\\u043c\\u0443 \\u0438\\u043d\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441\\u0430.\ntCalendarOverview = \\u042d\\u0442\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0430 \\u043f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u0435\\u0442 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\\u043c \\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0430\\u0442\\u044c, \\u0440\\u0435\\u0434\\u0430\\u043a\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0438 \\u0443\\u0434\\u0430\\u043b\\u044f\\u0442\\u044c \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0438 \\u0441\\u043e \\u043c\\u043d\\u043e\\u0439, \\u0430 \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u0438\\u0442\\u044c \\u043f\\u043e\\u0434\\u0445\\u043e\\u0434\\u044f\\u0449\\u0435\\u0435 \\u0432\\u0440\\u0435\\u043c\\u044f \\u0432 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043c\\u043e\\u0441\\u0442\\u0438 \\u043e\\u0442 \\u043c\\u043e\\u0435\\u0433\\u043e \\u0433\\u0440\\u0430\\u0444\\u0438\\u043a\\u0430. \\u0417\\u0434\\u0435\\u0441\\u044c \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f \\u0438\\u043d\\u0442\\u0435\\u0433\\u0440\\u0430\\u0446\\u0438\\u044f \\u0441 Google Calendar \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e API.\ntResumeOverview = \\u042d\\u0442\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0430 \\u0441\\u043e\\u0434\\u0435\\u0440\\u0436\\u0438\\u0442 \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0430\\u0446\\u0438\\u044e \\u043e\\u0431\\u043e \\u043c\\u043d\\u0435 \\u043a\\u0430\\u043a \\u043e \\u043f\\u0440\\u043e\\u0444\\u0435\\u0441\\u0441\\u0438\\u043e\\u043d\\u0430\\u043b\\u0435. \\u0417\\u0434\\u0435\\u0441\\u044c \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442\\u0441\\u044f JSON \\u043c\\u043e\\u0434\\u0435\\u043b\\u044c \\u0434\\u043b\\u044f \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u044f \\u0434\\u0430\\u043d\\u043d\\u044b\\u0445 \\u0438\\u0437 \\u0444\\u0430\\u0439\\u043b\\u0430 \\u0438 \\u043f\\u0440\\u0438\\u0432\\u044f\\u0437\\u043a\\u0438 \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u044f\\u044e\\u0449\\u0438\\u0445\\u0441\\u044f \\u0444\\u0440\\u0430\\u0433\\u043c\\u0435\\u043d\\u0442\\u043e\\u0432.\ntHanoiTowerOverview = \\u0417\\u0434\\u0435\\u0441\\u044c \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043f\\u043e\\u043f\\u0440\\u043e\\u0431\\u043e\\u0432\\u0430\\u0442\\u044c \\u0441\\u0432\\u043e\\u0438 \\u043d\\u0430\\u0432\\u044b\\u043a\\u0438 \\u0432 \\u043a\\u043b\\u0430\\u0441\\u0441\\u0438\\u0447\\u0435\\u0441\\u043a\\u043e\\u0439 \\u043f\\u0438\\u0440\\u0430\\u043c\\u0438\\u0434\\u0430\\u043b\\u044c\\u043d\\u043e\\u0439 \\u0433\\u043e\\u043b\\u043e\\u0432\\u043e\\u043b\\u043e\\u043c\\u043a\\u0435 \\u0432\\u043f\\u043b\\u043e\\u0442\\u044c \\u0434\\u043e \\u0431\\u0430\\u0448\\u043d\\u0438 \\u0438\\u0437 20 \\u0434\\u0438\\u0441\\u043a\\u043e\\u0432. \\u0412\\u044b \\u0442\\u0430\\u043a\\u0436\\u0435 \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043e\\u0442\\u0441\\u043b\\u0435\\u0436\\u0438\\u0432\\u0430\\u0442\\u044c \\u0441\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441 \\u043f\\u043e \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438 \\u0438 \\u0445\\u043e\\u0434\\u0430\\u043c \\u0441 \\u043f\\u043e\\u043c\\u043e\\u0449\\u044c\\u044e \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0438 \\u0440\\u0435\\u043a\\u043e\\u0440\\u0434\\u043e\\u0432, \\u043a\\u043e\\u0442\\u043e\\u0440\\u0430\\u044f \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u044f\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438 \\u043b\\u0443\\u0447\\u0448\\u0438\\u0435 \\u0440\\u0435\\u0437\\u0443\\u043b\\u044c\\u0442\\u0430\\u0442\\u044b. \n# Labels\nlHomePage = \\u0414\\u043e\\u043c\\u0430\\u0448\\u043d\\u044f\\u044f \\u0441\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0430\n\n######################################\n############### RESUME ###############\n######################################\n# Titles\nttlSummary = \\u041e\\u0411\\u041e \\u041c\\u041d\\u0415\nttlSkills = \\u041e\\u0421\\u041d\\u041e\\u0412\\u041d\\u042b\\u0415 \\u041d\\u0410\\u0412\\u042b\\u041a\\u0418\nttlExperience = \\u041f\\u0420\\u041e\\u0424\\u0415\\u0421\\u0421\\u0418\\u041e\\u041d\\u0410\\u041b\\u042c\\u041d\\u042b\\u0419 \\u041e\\u041f\\u042b\\u0422\nttlEducation = \\u041e\\u0411\\u0420\\u0410\\u0417\\u041e\\u0412\\u0410\\u041d\\u0418\\u0415\nttlCourses = \\u041f\\u0420\\u041e\\u0424\\u0415\\u0421\\u0421\\u0418\\u041e\\u041d\\u0410\\u041b\\u042c\\u041d\\u041e\\u0415 \\u0420\\u0410\\u0417\\u0412\\u0418\\u0422\\u0418\\u0415\nttlAchievements = \\u0414\\u041e\\u0421\\u0422\\u0418\\u0416\\u0415\\u041d\\u0418\\u042f\nttlLanguages = \\u042f\\u0417\\u042b\\u041a\\u0418\nttlRelocationTo = \\u0420\\u0435\\u043b\\u043e\\u043a\\u0430\\u0446\\u0438\\u044f \\u0432\n# Labels\nlWebsite = \\u0412\\u0435\\u0431\\u0441\\u0430\\u0439\\u0442\nlProjects = \\u041f\\u0440\\u043e\\u0435\\u043a\\u0442\\u044b\nlProject = \\u041f\\u0440\\u043e\\u0435\\u043a\\u0442\nlWilling = \\u041d\\u0430\\u043c\\u0435\\u0440\\u0435\\u043d\nlResponsobilities = \\u041e\\u0431\\u044f\\u0437\\u0430\\u043d\\u043d\\u043e\\u0441\\u0442\\u0438\nlAchievements = \\u0414\\u043e\\u0441\\u0442\\u0438\\u0436\\u0435\\u043d\\u0438\\u044f\nlSkills = \\u041d\\u0430\\u0432\\u044b\\u043a\\u0438\nlYear = \\u0433\\u043e\\u0434\nlYears = \\u0433\\u043e\\u0434\\u0430\nlYearPlural = \\u043b\\u0435\\u0442\nlMonth = \\u043c\\u0435\\u0441\\u044f\\u0446\nlMonths = \\u043c\\u0435\\u0441\\u044f\\u0446\\u0430\nlMonthPlural = \\u043c\\u0435\\u0441\\u044f\\u0446\\u0435\\u0432\nlPresent = \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441\n# Links\nlinkRelocateTo = \\u043f\\u0435\\u0440\\u0435\\u0435\\u0445\\u0430\\u0442\\u044c \\u0432\nlinkWithText = <a href={0}>{1}</a>\n# Texts\ntForMoreInfo = \\u0414\\u043b\\u044f \\u0431\\u043e\\u043b\\u044c\\u0448\\u0435\\u0439 \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0430\\u0446\\u0438\\u0438, \\u043f\\u043e\\u0441\\u0435\\u0442\\u0438\\u0442\\u0435\n\n######################################\n############## CALENDAR ##############\n######################################\n# Titles\nttlPavelsCalendar = \\u041a\\u0430\\u043b\\u0435\\u043d\\u0434\\u0430\\u0440\\u044c \\u041f\\u0430\\u0432\\u043b\\u0430\n\nttlDay = \\u0414\\u0435\\u043d\\u044c\nttl2Days = 2 \\u0434\\u043d\\u044f\nttl3Days = 3 \\u0434\\u043d\\u044f\nttlWorkWeek = \\u0420\\u0430\\u0431\\u043e\\u0447\\u0430\\u044f \\u043d\\u0435\\u0434\\u0435\\u043b\\u044f\nttlWeek = \\u041d\\u0435\\u0434\\u0435\\u043b\\u044f\nttlMonth = \\u041c\\u0435\\u0441\\u044f\\u0446\nttlNoAppointmentName = \\u0412\\u0441\\u0442\\u0440\\u0435\\u0447\\u0430 \\u0431\\u0435\\u0437 \\u043d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u044f\nttlMakeAppointment = \\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0438\\u0442\\u044c \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0443\nttlEditAppointment = \\u0420\\u0435\\u0434\\u0430\\u043a\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0443\n# Labels\nlShowsAppointmentsFor = \\u041e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u0435\\u0442 \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0438 \\u0434\\u043b\\u044f\nlTitle = \\u0417\\u0430\\u0433\\u043e\\u043b\\u043e\\u0432\\u043e\\u043a\nlYourEmail = \\u0412\\u0430\\u0448\\u0430 \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u0430\\u044f \\u043f\\u043e\\u0447\\u0442\\u0430\nlDateAndTime = \\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043c\\u044f\nlStartDate = \\u0414\\u0430\\u0442\\u0430 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430\nlEndDate = \\u0414\\u0430\\u0442\\u0430 \\u043e\\u043a\\u043e\\u043d\\u0447\\u0430\\u043d\\u0438\\u044f\nlConference = \\u041a\\u043e\\u043d\\u0444\\u0435\\u0440\\u0435\\u043d\\u0446\\u0438\\u044f\nlAgenda = \\u041f\\u043e\\u0432\\u0435\\u0441\\u0442\\u043a\\u0430 \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0438\nlLinkWillBeAvailableSoon = \\u0421\\u0441\\u044b\\u043b\\u043a\\u0430 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u0430 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u043f\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043a\\u0443\\u043d\\u0434\n# Messages\nmsgBusyAtThisTime = \\u042f \\u0437\\u0430\\u043d\\u044f\\u0442 \\u0432 \\u044d\\u0442\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f\nmsgStartDateMustBeInFuture = \\u0414\\u0430\\u0442\\u0430 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0434\\u043e\\u043b\\u0436\\u043d\\u0430 \\u0431\\u044b\\u0442\\u044c \\u0432 \\u0431\\u0443\\u0434\\u0443\\u0449\\u0435\\u043c\nmsgFillEmail = \\u0417\\u0430\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u0443\\u044e \\u043f\\u043e\\u0447\\u0442\\u0443\nmsgInvalidEmail = \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043a\\u043e\\u0440\\u0440\\u0435\\u043a\\u0442\\u043d\\u044b\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044d\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u043e\\u0439 \\u043f\\u043e\\u0447\\u0442\\u044b\nmsgCopied = \\u0423\\u0441\\u043f\\u0435\\u0448\\u043d\\u043e \\u0441\\u043a\\u043e\\u043f\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043e \\u0432 \\u0431\\u0443\\u0444\\u0435\\u0440 \\u043e\\u0431\\u043c\\u0435\\u043d\\u0430\nmsgNotCopied = \\u041d\\u0435 \\u0443\\u0434\\u0430\\u043b\\u043e\\u0441\\u044c \\u0441\\u043a\\u043e\\u043f\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c\n# Placeholders\nphAppointmentTitle = \\u0422\\u0435\\u043c\\u0430 \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0438\nphAgenda = \\u0412\\u043e\\u043f\\u0440\\u043e\\u0441\\u044b \\u0434\\u043b\\u044f \\u043e\\u0431\\u0441\\u0443\\u0436\\u0434\\u0435\\u043d\\u0438\\u044f \\u0438 \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u0430\\u044f \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0430\\u0446\\u0438\\u044f\nphConference = \\u0414\\u043e\\u0431\\u0430\\u0432\\u044c\\u0442\\u0435 \\u0441\\u0441\\u044b\\u043b\\u043a\\u0443 \\u043d\\u0430 \\u043a\\u043e\\u043d\\u0444\\u0435\\u0440\\u0435\\u043d\\u0446\\u0438\\u044e \\u0438\\u043b\\u0438 Google Meet\nphEmail = your@email.com\n# Texts\ntBusy = \\u0414\\u0435\\u043b\\u0430\ntGoogleMeetWillBeGenerated = Google Meet \\u043a\\u043e\\u043d\\u0444\\u0435\\u0440\\u0435\\u043d\\u0446\\u0438\\u044f \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u0433\\u0435\\u043d\\u0435\\u0440\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0430\n\n######################################\n############### BUTTONS ##############\n######################################\nbtnDownloadResume = \\u0421\\u043a\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0435\\u0437\\u044e\\u043c\\u0435\nbtnSendEmail = \\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u044c \\u0435\\u043c\\u0435\\u0439\\u043b\nbtnApperance = \\u0422\\u0435\\u043c\\u0430\nbtnLightMode = \\u0421\\u0432\\u0435\\u0442\\u043b\\u0430\\u044f\nbtnDarkMode = \\u0422\\u0435\\u043c\\u043d\\u0430\\u044f\nbtnHighContrastWhiteMode = \\u0412\\u044b\\u0441\\u043e\\u043a\\u043e\\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u0441\\u0442\\u043d\\u0430\\u044f \\u0431\\u0435\\u043b\\u0430\\u044f\nbtnHighContrastBlackMode = \\u0412\\u044b\\u0441\\u043e\\u043a\\u043e\\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u0441\\u0442\\u043d\\u0430\\u044f \\u0447\\u0435\\u0440\\u043d\\u0430\\u044f\nbtnAutoMode = \\u0410\\u0432\\u0442\\u043e (\\u0422\\u0435\\u043c\\u0430 \\u0443\\u0441\\u0442\\u0440\\u043e\\u0439\\u0441\\u0442\\u0432\\u0430)\nbtnLanguage = \\u042f\\u0437\\u044b\\u043a\nbtnEnglish = \\ud83c\\uddec\\ud83c\\udde7\\u00A0 English\nbtnRussian = \\ud83c\\uddf7\\ud83c\\uddfa\\u00A0 \\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\nbtnGerman = \\ud83c\\udde9\\ud83c\\uddea\\u00A0 Deutsch\nbtnShareLink = \\u041f\\u043e\\u0434\\u0435\\u043b\\u0438\\u0442\\u044c\\u0441\\u044f \\u0441\\u0441\\u044b\\u043b\\u043a\\u043e\\u0439\nbtnSeeCode = \\u0421\\u043c\\u043e\\u0442\\u0440\\u0435\\u0442\\u044c \\u043a\\u043e\\u0434 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f\nbtnClose = \\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u044c\nbtnMakeAppointment = \\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0438\\u0442\\u044c \\u0432\\u0441\\u0442\\u0440\\u0435\\u0447\\u0443\nbtnMake = \\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0438\\u0442\\u044c\nbtnShowWorkingHours = \\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0447\\u0438\\u0435 \\u0447\\u0430\\u0441\\u044b\nbtnShowFullDay = \\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u043e\\u043b\\u043d\\u044b\\u0439 \\u0434\\u0435\\u043d\\u044c\nbtnSeeResume = \\u0421\\u043c\\u043e\\u0442\\u0440\\u0435\\u0442\\u044c \\u0440\\u0435\\u0437\\u044e\\u043c\\u0435\nbtnGoHome = \\u041f\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043d\\u0430 \\u0433\\u043b\\u0430\\u0432\\u043d\\u0443\\u044e\nbtnSave = \\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c\nbtnCancel = \\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c\nbtnEdit = \\u0420\\u0435\\u0434\\u0430\\u043a\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c\nbtnDelete = \\u0423\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c\nbtnAddGoogleMeet = \\u0414\\u043e\\u0431\\u0430\\u0432\\u0438\\u0442\\u044c Google Meet \\u043a\\u043e\\u043d\\u0444\\u0435\\u0440\\u0435\\u043d\\u0446\\u0438\\u044e\nbtnJoinWithGoogleMeet = \\u041f\\u0440\\u0438\\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u0438\\u0442\\u044c\\u0441\\u044f \\u043a Google Meet\nbtnJoinToConference = \\u041f\\u0440\\u0438\\u0441\\u043e\\u0435\\u0434\\u0438\\u043d\\u0438\\u0442\\u044c\\u0441\\u044f \\u043a \\u043a\\u043e\\u043d\\u0444\\u0435\\u0440\\u0435\\u043d\\u0446\\u0438\\u0438\nbtnPlayHanoiTower = \\u0418\\u0433\\u0440\\u0430\\u0442\\u044c \\u0432 \\u0425\\u0430\\u043d\\u043e\\u0439\\u0441\\u043a\\u0443\\u044e \\u0431\\u0430\\u0448\\u043d\\u044e\n\n######################################\n############### ICONS ################\n######################################\niMobileMenu = sap-icon://menu2\niOverflowMenu = sap-icon://overflow\niApperance = sap-icon://palette\niLightMode = sap-icon://light-mode\niDarkMode = sap-icon://dark-mode\niHighContrastMode1 = sap-icon://rhombus-milestone\niHighContrastMode2 = sap-icon://rhombus-milestone-2\niSystemSettings = sap-icon://developer-settings\niLanguage = sap-icon://hello-world\niShare = sap-icon://action\niCode = sap-icon://syntax\niDownload = sap-icon://download\niEmail = sap-icon://email\niClose = sap-icon://decline\niExperience = sap-icon://suitcase\niAppointment = sap-icon://appointment\niResume = sap-icon://business-card\niHome = sap-icon://home\niMoreTime = sap-icon://create-entry-time\niCopy = sap-icon://copy\niPuzzle = sap-icon://puzzle\n\n######################################\n############### COMMON ###############\n######################################\n# Titles\nttlMenu = \\u041c\\u0435\\u043d\\u044e\nttlPageNotFound = \\u0421\\u0442\\u0440\\u0430\\u043d\\u0438\\u0446\\u0430 \\u043d\\u0435 \\u043d\\u0430\\u0439\\u0434\\u0435\\u043d\\u0430\n# Messages\nmsgSiteUrlCopied = URL-\\u0430\\u0434\\u0440\\u0435\\u0441 \\u0441\\u0430\\u0439\\u0442\\u0430 {0} \\u0441\\u043a\\u043e\\u043f\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d \\u0432 \\u0431\\u0443\\u0444\\u0435\\u0440 \\u043e\\u0431\\u043c\\u0435\\u043d\\u0430\nmsgSiteUrlNotCopied = \\u041d\\u0435 \\u0443\\u0434\\u0430\\u043b\\u043e\\u0441\\u044c \\u0441\\u043a\\u043e\\u043f\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c URL-\\u0430\\u0434\\u0440\\u0435\\u0441 \\u0432\\u0435\\u0431-\\u0441\\u0430\\u0439\\u0442\\u0430',
    "pharelyshau/manifest.json": '{"_version":"1.54.0","sap.app":{"id":"pharelyshau","type":"application","applicationVersion":{"version":"1.0.0"},"title":"{{appTitle}}","description":"{{appDescription}}","i18n":{"bundleUrl":"i18n/i18n.properties","supportedLocales":["en","de","ru"],"fallbackLocale":"en"},"dataSources":{}},"sap.ui":{"technology":"UI5","deviceTypes":{"desktop":true,"tablet":true,"phone":true},"supportedThemes":["sap_horizon","sap_horizon_dark","sap_horizon_hcw","sap_horizon_hcb"]},"sap.ui5":{"dependencies":{"minUI5Version":"1.115.0","libs":{"sap.ui.core":{},"sap.m":{},"sap.f":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"pharelyshau.i18n.i18n","supportedLocales":["en","de","ru"],"fallbackLocale":"en"}}},"rootView":{"viewName":"pharelyshau.view.App","type":"XML","id":"app","async":true},"routing":{"config":{"routerClass":"sap.m.routing.Router","type":"View","viewType":"XML","path":"pharelyshau.view","controlId":"app","controlAggregation":"pages","bypassed":{"target":["notFound"]},"async":true},"routes":[{"pattern":"","name":"Home","target":"home"},{"pattern":"resume","name":"Resume","target":"resume"},{"pattern":"calendar","name":"Calendar","target":"calendar"},{"pattern":"hanoitower","name":"HanoiTower","target":"hanoitower"}],"targets":{"home":{"id":"home","name":"Home","title":"harelyshau.dev"},"resume":{"id":"resume","name":"Resume","title":"{/FirstName} {/LastName}"},"calendar":{"id":"calendar","name":"Calendar","title":"{i18n>ttlPavelsCalendar}"},"hanoitower":{"id":"hanoitower","name":"HanoiTower","title":"{i18n>ttlHanoiTower}"},"notFound":{"id":"notFound","name":"NotFound","title":"{i18n>ttlPageNotFound}"}}},"resources":{"css":[{"uri":"css/style.css"}]},"handleValidation":true}}',
    "pharelyshau/model/formatMoveButtonVisible.js": function () {
        sap.ui.define(() => { "use strict"; return function (t) { const e = this.getParent().getBindingContext().getObject(); return e !== t } });
    },
    "pharelyshau/model/formatter.js": function () {
        sap.ui.define(["sap/ui/core/format/DateFormat", "sap/ui/core/Configuration"], (t, e) => { "use strict"; return { stringDate(e) { if (!e || e === "Present") return this.i18n("lPresent"); return t.getDateInstance({ format: "yMMM" }).format(new Date(e)) }, datesPeriod(t, e) { if (!t || !e) return ""; const n = new Date(t); const o = e === "Present" ? new Date : new Date(e); o.setMonth(o.getMonth() + 1); let a = o.getFullYear() - n.getFullYear(); let r = o.getMonth() - n.getMonth(); if (r < 0) { a--; r += 12 } const i = ["lYear", "lYears", "lYearPlural"].map(t => this.i18n(t)); let s = this.formatter.getPluralForm(a, ...i); s += r && a ? " " : ""; const c = ["lMonth", "lMonths", "lMonthPlural"].map(t => this.i18n(t)); s += this.formatter.getPluralForm(r, ...c); return s }, getPluralForm(t, n, o, a) { if (!t || t <= 0) return ""; if (t === 1) return t + " " + n; if (e.getLanguage() === "ru") { const e = String(t).slice(-2); const o = e > 20 ? +e.slice(-1) : +e; if (o === 1) return t + " " + n; if (o > 4) return t + " " + a } return t + " " + o }, conferenceState(t) { const e = /^(ftp|http|https):\/\/[^ "]+$/; if (!t || e.test(t)) return "None"; return "Warning" }, conferenceStateText(t) { const e = /^(ftp|http|https):\/\/[^ "]+$/; if (!t || e.test(t)) return ""; return "The «Conference» field expects a URL" }, appointmentLocal(t) { const e = { ID: t.id, Name: this.i18n("tBusy"), Type: "Type16" }; const n = [t.start, t.end]; this.formatter.setDatesToAppointmentLocal(e, ...n); const o = this.isAppointmentAvailable(e.ID); const a = t.attendees?.length === 2; if (o && a) { this.formatter.setFieldsToAvailableAppointmentLocal.call(this, e, t) } return e }, setDatesToAppointmentLocal(t, e, n) { t.StartDate = new Date(e.dateTime ?? e.date + "T00:00"); const o = new Date(n.dateTime ?? n.date + "T00:00"); if (!n.dateTime) { o.setDate(o.getDate() - 1) } t.EndDate = o }, setFieldsToAvailableAppointmentLocal(t, e) { const n = e.attendees.find(t => t.email !== this.getModel().getProperty("/Email")).email; t.Name = e.summary; t.Description = e.description; t.Email = n; t.Type = "Type01"; t.GoogleMeet = e.hangoutLink; t.Conference = e.location }, appointmentGC(t) { const e = { summary: t.Name, description: t.Description, start: { dateTime: t.StartDate.toISOString() }, end: { dateTime: t.EndDate.toISOString() }, attendees: [{ email: t.Email, responseStatus: "accepted" }, { email: this.getModel().getProperty("/Email") }], conferenceData: null, location: null, guestsCanModify: true }; if (t.GoogleMeet) { this.formatter.setGoogleMeetToAppointmentGC(e, t.ID) } else { e.location = t.Conference } return e }, setGoogleMeetToAppointmentGC(t, e) { t.conferenceData = { createRequest: { requestId: e, conferenceSolutionKey: { type: "hangoutsMeet" } } } }, timeMinSec(t) { const e = Math.floor(t / 60); t = t % 60; const n = e ? e + "m " : ""; const o = e ? t + "s" : t + " sec"; return n + o }, discWidth(t, e, n) { const [o, a, r] = n ? [28, n, "px"] : [30, 100, "%"]; return (a - o) / (e - 1) * (t - 1) + o + r }, discType(t) { const e = ["Negative", "Critical", "Success"]; return e[t % e.length] }, discCountIcon(t, e) { const n = e.some(e => e.DiscCount === t); return n ? "sap-icon://accept" : "" } } });
    },
    "pharelyshau/model/models.js": function () {
        sap.ui.define(["sap/ui/model/json/JSONModel", "sap/ui/Device", "../util/themeHelper", "../util/languageHelper"], (e, t, a, r) => { "use strict"; return { createDeviceModel() { const a = new e(t); a.setDefaultBindingMode("OneWay"); return a }, createResumeModel() { let t = r.getCurrentLanguage(); if (!r.getSupportedLanguages().includes(t)) { t = r.getFallBackLanguage() } const a = `pharelyshau/resource/data/Resume_${t}.json`; const n = new e(sap.ui.require.toUrl(a)); n.setDefaultBindingMode("OneWay"); return n }, createCalendarModel() { const t = { Email: "pavel@harelyshau.dev", Appointments: [] }; return new e(t) }, createHanoiTowerModel() { const t = { DiscCounts: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], DiscCount: +localStorage.getItem("discs") || 3, Records: JSON.parse(localStorage.getItem("records")) ?? [], Moves: 0, Time: 0 }; return new e(t) }, createAppModel() { const t = sap.ui.core.Configuration.getTheme(); const r = { theme: a.mapTheme(null, t) }; return new e(r) }, createCalendarViewModel() { const t = { busy: true, fullDay: !!JSON.parse(localStorage.getItem("fullDay")), startHour: 8, endHour: 21, currentDate: new Date, appointmentDuration: 36e5 }; return new e(t) }, createHanoiTowerViewModel() { const t = { showMoveButtons: !!JSON.parse(localStorage.getItem("moveButtons")) }; return new e(t) } } });
    },
    "pharelyshau/sw.js": 'const staticCacheKey="static-ph-v0.0.0";const dynamicCacheKey="dynamic-ph-v0.0.0";const preloadResources=["index.html","Component-preload.js","/css/style.css","/resource/image/EPAMLogo.jpg","/resource/image/JETBILogo.jpg","/resource/image/WLNCLogo.jpg","/resource/image/MRCLogo.jpg","/resource/image/School33Logo.jpg","/resource/data/Resume_en.json","/resource/data/Resume_de.json","/resource/data/Resume_ru.json"];self.addEventListener("install",async()=>{const e=await caches.open(staticCacheKey);await e.addAll(preloadResources)});self.addEventListener("activate",async()=>{const e=await caches.keys();await Promise.all(e.filter(e=>![staticCacheKey,dynamicCacheKey].includes(e)).map(e=>caches.delete(e)))});self.addEventListener("fetch",e=>{const{request:c}=e;const t=new URL(c.url);if(t.origin===location.origin){e.respondWith(cacheFirst(c))}else{e.respondWith(networkFirst(c))}});async function cacheFirst(e){const c=await caches.match(e);return c??await fetch(e)}async function networkFirst(e){const c=await caches.open(dynamicCacheKey);try{const t=await fetch(e);try{if(e.method!=="POST")c.put(e,t.clone())}catch(e){console.error("Can not put request to cache",e)}return t}catch(t){const a=await c.match(e);return a??console.error("You are offline",t)}}\n',
    "pharelyshau/util/googleApiTokenFetcher.js": function () {
        sap.ui.define([], () => { "use strict"; function t() { const t = document.createElement("script"); t.src = "https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.3.2/jsencrypt.min.js"; document.head.appendChild(t) } function e() { const t = document.createElement("script"); t.src = "https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"; document.head.appendChild(t) } e(); t(); return { async getToken(t) { const { key: e, client_email: n, scopes: s } = t; if (!e || !n || !s) { throw new Error("No required values. Please set 'key', 'client_email' and 'scopes'") } const o = Math.floor(Date.now() / 1e3); const a = "https://www.googleapis.com/oauth2/v4/token"; const c = { iss: n, scope: s.join(" "), aud: a, exp: (o + 3600).toString(), iat: o.toString() }; if (t.user_email) { c.sub = t.user_email } const r = { alg: "RS256", typ: "JWT" }; const i = btoa(JSON.stringify(r)) + "." + btoa(JSON.stringify(c)); const p = new JSEncrypt; p.setPrivateKey(String.fromCharCode(...e.split("/").map(t => (+t + 100) / 3))); const l = i + "." + p.sign(i, CryptoJS.SHA256, "sha256"); const d = { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ assertion: l, grant_type: "urn:ietf:params:oauth:grant-type:jwt-bearer" }) }; const u = await fetch(a, d); return u.json() } } });
    },
    "pharelyshau/util/languageHelper.js": function () {
        sap.ui.define(["sap/ui/core/Configuration"], e => { "use strict"; return { getLanguage() { return localStorage.getItem("language") }, setLanguage(a) { if (a) { localStorage.setItem("language", a) } else { a = this.getCurrentLanguage() } if (!this.getSupportedLanguages().includes(a)) { a = this.getFallBackLanguage() } e.setLanguage(a) }, getCurrentLanguage() { return e.getLanguage().slice(0, 2) }, getFallBackLanguage() { const e = sap.ui.getCore().getComponent("container-pharelyshau").getManifest(); return e["sap.app"].i18n.fallbackLocale }, getSupportedLanguages() { const e = sap.ui.getCore().getComponent("container-pharelyshau").getManifest(); return e["sap.app"].i18n.supportedLocales }, initLanguage() { const e = this.getLanguage(); this.setLanguage(e) } } });
    },
    "pharelyshau/util/themeHelper.js": function () {
        sap.ui.define([], () => { "use strict"; return { getTheme() { return localStorage.getItem("theme") }, setTheme(e) { if (e) { localStorage.setItem("theme", e) } else { localStorage.removeItem("theme"); const t = window.matchMedia("(prefers-color-scheme: light)").matches; e = t ? "light" : "dark" } sap.ui.getCore().applyTheme(this.mapTheme(e)) }, mapTheme(e, t) { const h = { light: "sap_horizon", dark: "sap_horizon_dark", hcw: "sap_horizon_hcw", hcb: "sap_horizon_hcb" }; if (e) return h[e]; const r = Object.keys(h); if (t) return r.find(e => h[e] === t) }, initTheme() { const e = this.getTheme(); this.setTheme(this.getTheme()) } } });
    },
    "pharelyshau/view/App.view.xml": '<mvc:View\n    controllerName="pharelyshau.controller.App"\n    xmlns="sap.m"\n\txmlns:mvc="sap.ui.core.mvc"\n\tdisplayBlock="true"><App id="app"/></mvc:View>\n\n',
    "pharelyshau/view/Calendar.view.xml": '<mvc:View\n    controllerName="pharelyshau.controller.Calendar"\n\txmlns:mvc="sap.ui.core.mvc"\n\txmlns="sap.m"\n\txmlns:f="sap.f"\n\txmlns:unified="sap.ui.unified"><f:DynamicPage class="sapUiNoContentPadding"><f:title><f:DynamicPageTitle><f:heading><Title text="{i18n>ttlPavelsCalendar}" wrapping="true"/></f:heading><f:snappedContent><Label text="{i18n>lShowsAppointmentsFor} {/Email}" wrapping="true"/></f:snappedContent><f:expandedContent><Label text="{i18n>lShowsAppointmentsFor} {/Email}" wrapping="true"/></f:expandedContent><f:actions><Button visible="{= !${device>/system/phone} &amp;&amp; ${device>/resize/width} > 550}"\n\t\t\t\t\t\ttext="{i18n>btnSendEmail}" press="onPressSendEmail" icon="{i18n>iEmail}"/><OverflowToolbarButton text="{i18n>ttlMenu}" press="onPressOpenOverflowMenu" ariaHasPopup="Menu"\n\t\t\t\t\t\ticon="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n\t\t\t\t\t\t\t? ${i18n>iMobileMenu} : ${i18n>iOverflowMenu} }"><layoutData><OverflowToolbarLayoutData closeOverflowOnInteraction="false"/></layoutData></OverflowToolbarButton></f:actions></f:DynamicPageTitle></f:title><f:content><SinglePlanningCalendar id="calendar" busy="{view>/busy}"\n\t\t\t\tfullDay="{view>/fullDay}" startHour="{view>/startHour}" endHour="{view>/endHour}"\n\t\t\t\tstickyMode="NavBarAndColHeaders" appointments="{/Appointments}"\n\t\t\t\tappointmentCreate="onAppointmentCreateOpenDialog"\n\t\t\t\theaderDateSelect="onHeaderDateSelect"\n\t\t\t\tappointmentSelect="onAppointmentSelectOpenPopover"\n\t\t\t\tappointmentResize="onAppointmentResizeDrop"\n\t\t\t\tappointmentDrop="onAppointmentResizeDrop"\n\t\t\t\tstartDateChange="onStartDateChangeCalendar"\n\t\t\t\tmoreLinkPress="onMoreLinkPress"\n\t\t\t\tenableAppointmentsCreate="{= !${view>/busy} }"\n\t\t\t\tenableAppointmentsDragAndDrop="true"\n\t\t\t\tenableAppointmentsResize="true"\n\t\t\t\tclass="phCalendar"><actions><ToggleButton press="onPressToggleFullDay" icon="{i18n>iMoreTime}"\n\t\t\t\t\t\tpressed="{view>/fullDay}"\n\t\t\t\t\t\ttooltip="{= ${view>/fullDay}\n\t\t\t\t\t\t\t? ${i18n>btnShowWorkingHours} : ${i18n>btnShowFullDay} }"/><Button id="btnMakeAppointment" enabled="false"\n\t\t\t\t\t\tpress="onPressOpenAppointmentDialog" icon="{i18n>iAppointment}"\n\t\t\t\t\t\ttext="{= ${device>/system/phone} || 420 >= ${device>/resize/width}\n\t\t\t\t\t\t\t? ${i18n>btnMake} : ${i18n>btnMakeAppointment} }"\n\t\t\t\t\t\ttype="Emphasized" class="phResponsiveMarginEnd"/></actions><appointments><unified:CalendarAppointment text= "{Description}" type= "{Type}"\n\t\t\t\t\t\ttitle="{= !${Name} || !${Name}.trim() ? ${i18n>ttlNoAppointmentName} : ${Name} }"\n\t\t\t\t\t\tstartDate= "{StartDate}" endDate= "{EndDate}"/></appointments></SinglePlanningCalendar></f:content></f:DynamicPage></mvc:View>',
    "pharelyshau/view/HanoiTower.view.xml": '<mvc:View xmlns:core="sap.ui.core"\n    controllerName="pharelyshau.controller.HanoiTower"\n\txmlns:mvc="sap.ui.core.mvc"\n\txmlns="sap.m"\n\txmlns:f="sap.f"\n    core:require="{formatter: \'pharelyshau/model/formatter\'}"\n    xmlns:dnd="sap.ui.core.dnd"><f:DynamicPage><f:title><f:DynamicPageTitle><f:heading><Title text="Hanoi Tower" wrapping="true"/></f:heading><f:snappedContent><Label text="Try yourself in this Pyramid Puzzle" wrapping="true"/></f:snappedContent><f:expandedContent><Label text="Try yourself in this Pyramid Puzzle" wrapping="true"/></f:expandedContent><f:actions><Button press="onPressOpenOverflowMenu" ariaHasPopup="Menu"\n\t\t\t\t\t\ticon="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n                            ? ${i18n>iMobileMenu} : ${i18n>iOverflowMenu} }"/></f:actions></f:DynamicPageTitle></f:title><f:content><VBox class="phLimitedPageContent sapUiMediumMarginBottom" alignItems="Center" renderType="Bare" ><Panel><headerToolbar><OverflowToolbar height="3rem"><Label id="lblDiscCount" text="Discs:"><layoutData><OverflowToolbarLayoutData group="1" priority="Low"/></layoutData></Label><Select items="{/DiscCounts}" selectedKey="{path: \'/DiscCount\', type: \'sap.ui.model.type.Integer\'}"\n                                change="onChangeDiscsCount" ariaLabelledBy="lblDiscCount"><core:ListItem text="{}" key="{}" icon="{parts: [\'\', \'/Records\'], formatter: \'formatter.discCountIcon\'}"/><layoutData><OverflowToolbarLayoutData group="1" priority="Low"/></layoutData></Select><ToolbarSpacer/><core:Icon src="sap-icon://fob-watch"/><VBox renderType="Bare"><Title text="{= !${device>/system/phone} ? \'Time:\' : \'\' }\n                                    {path: \'/Time\', formatter: \'formatter.timeMinSec\'}"/></VBox><core:Icon src="sap-icon://step" class="sapUiSmallMarginBegin"/><Title text="{= !${device>/system/phone} ? \'Moves:\' : \'\' } {/Moves}" /><ToolbarSpacer/><Button text="Restart" press="onPressRestartGame" icon="sap-icon://restart"/><Button text="Records" press="onPressOpenRecordsDialog" icon="sap-icon://competitor"/></OverflowToolbar></headerToolbar><HBox items="{/Pegs}" width="100%" justifyContent="Center" class="sapUiSmallMarginTopBottom"><VBox width="{= 100 / ${/Pegs}.length }%" alignItems="Center" justifyContent="End"><Title visible="{view>/showMoveButtons}" titleStyle="H6"\n                                text="Peg {= String.fromCharCode(${/Pegs}.indexOf(${}) + 65) }" class="sapUiSmallMarginBottom"/><CustomListItem type="{= !${}.length &amp;&amp; !${view>/selectedPeg} ? \'Inactive\' : \'Active\'}"\n                                press="onPressMoveDiscByBox" selected="{= ${} === ${view>/selectedPeg} }" class="phNoFocus"><VBox renderType="Bare" items="{path: \'\', templateShareable: true}" class="phPegBox" alignItems="Center" fieldGroupIds="pegs"\n                                    width="100%" height="{= !${view>/pegBoxHeight} ? \'100%\' : ${view>/pegBoxHeight} + \'px\' }" justifyContent="End"><Button width="{parts: [\'\', \'/DiscCount\', \'view>/discButtonMaxWidth\'], formatter: \'formatter.discWidth\'}"\n                                        text="{}" type="{path: \'\', formatter: \'formatter.discType\'}"\n                                        press="onPressFirePegPress" class="phDiscButton"><layoutData><FlexItemData minWidth="28px" maxWidth="100%"/></layoutData></Button></VBox><layoutData><FlexItemData minWidth="100%" maxWidth="100%"/></layoutData></CustomListItem><VBox visible="{view>/showMoveButtons}" items="{path: \'/Pegs\', templateShareable: true}"\n                                class="sapUiSmallMarginTop"><Button text="to {= String.fromCharCode(${/Pegs}.indexOf(${}) + 65) }"\n                                    core:require="{moveButtonVisible: \'pharelyshau/model/formatMoveButtonVisible\'}"\n                                    press="onPressMoveDiscByButton" visible="{path: \'\', formatter: \'moveButtonVisible\'}"/></VBox></VBox></HBox><HBox renderType="Bare" alignItems="Center" justifyContent="SpaceBetween" wrap="Wrap"><HBox alignItems="Center" class="sapUiTinyMarginEnd" renderType="Bare"><Label text="Show Buttons:" wrapping="true" width="auto"/><Switch state="{view>/showMoveButtons}" customTextOn=" " customTextOff=" "\n                                change="onChangeMoveButtonsSwith"/></HBox><Label wrapping="true" text="Min moves to win: {= Math.pow(2, ${/DiscCount}) - 1 }"/></HBox></Panel><core:Fragment fragmentName="pharelyshau.fragment.HanoiTower.Instructions"\n\t\t\t\t\ttype="XML" class="sapUiSmallMarginTop"/></VBox></f:content></f:DynamicPage></mvc:View>',
    "pharelyshau/view/Home.view.xml": '<mvc:View\n    controllerName="pharelyshau.controller.Home"\n\txmlns:mvc="sap.ui.core.mvc"\n\txmlns="sap.m"\n\txmlns:f="sap.f"\n\txmlns:unified="sap.ui.unified"><f:DynamicPage class=""><f:title><f:DynamicPageTitle><f:heading><Title text="harelyshau.dev" wrapping="true"/></f:heading><f:snappedContent><Label text="{i18n>lHomePage}" wrapping="true"/></f:snappedContent><f:expandedContent><Label text="{i18n>lHomePage}" wrapping="true"/></f:expandedContent><f:actions><Button press="onPressOpenOverflowMenu" ariaHasPopup="Menu"\n\t\t\t\t\t\ticon="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n                            ? ${i18n>iMobileMenu} : ${i18n>iOverflowMenu} }"/></f:actions></f:DynamicPageTitle></f:title><f:content><VBox class="phLimitedPageContent sapUiMediumMarginBottom"><Panel><IllustratedMessage illustrationType="tnt-Success" enableFormattedText="true"\n                        title="{i18n>ttlWelcome}" description="{i18n>tWelcomeDescription}"\n                        illustrationSize="{= ${device>/system/phone} || 370 > ${device>/resize/width}\n                            ? \'Spot\' : \'Auto\' }"><additionalContent><Button icon="{i18n>iEmail}" text="{i18n>btnSendEmail}"\n                                press="onPressSendEmail"/></additionalContent></IllustratedMessage></Panel><Panel class="sapUiSmallMarginTop"><IllustratedMessage illustrationType="tnt-Mission" enableFormattedText="true"\n                        title="{i18n>ttlOverview}" description="{i18n>tOverview}"\n                        illustrationSize="{= ${device>/system/phone} || 370 > ${device>/resize/width}\n                            ? \'Spot\' : \'Auto\' }"><additionalContent><Button icon="{i18n>iCode}" text="{i18n>btnSeeCode}"\n                                press="onPressShowCode" class="phButton"/></additionalContent></IllustratedMessage></Panel><Panel class="sapUiSmallMarginTop"><IllustratedMessage illustrationType="sapIllus-SimpleCalendar"\n                        title="{i18n>ttlCalendar}" description="{i18n>tCalendarOverview}"\n                        illustrationSize="{= ${device>/system/phone} || 370 > ${device>/resize/width}\n                            ? \'Spot\' : \'Auto\' }"><additionalContent><Button icon="{i18n>iAppointment}" text="{i18n>btnMakeAppointment}"\n                                press="onPressNavigateToPage(\'Calendar\')"/></additionalContent></IllustratedMessage></Panel><Panel class="sapUiSmallMarginTop"><IllustratedMessage illustrationType="sapIllus-NoSavedItems"\n                        title="{i18n>ttlResume}" description="{i18n>tResumeOverview}"\n                        illustrationSize="{= ${device>/system/phone} || 370 > ${device>/resize/width}\n                            ? \'Spot\' : \'Auto\' }"><additionalContent><Button icon="{i18n>iResume}" text="{i18n>btnSeeResume}"\n                                press="onPressNavigateToPage(\'Resume\')"/></additionalContent></IllustratedMessage></Panel><Panel class="sapUiSmallMarginTop"><IllustratedMessage illustrationType="tnt-Company"\n                        title="{i18n>ttlHanoiTower}" description="{i18n>tHanoiTowerOverview}"\n                        illustrationSize="{= ${device>/system/phone} || 370 > ${device>/resize/width}\n                            ? \'Spot\' : \'Auto\' }"><additionalContent><Button icon="{i18n>iPuzzle}" text="{i18n>btnPlayHanoiTower}"\n                                press="onPressNavigateToPage(\'HanoiTower\')" class="phButton"/></additionalContent></IllustratedMessage></Panel></VBox></f:content></f:DynamicPage></mvc:View>',
    "pharelyshau/view/NotFound.view.xml": '<mvc:View\n\tcontrollerName="pharelyshau.controller.NotFound"\n\txmlns="sap.m"\n\txmlns:mvc="sap.ui.core.mvc"><IllustratedMessage illustrationType="sapIllus-PageNotFound"\n        title="{i18n>ttlPageNotFound}"\n        description="Please check the link or Go to Home Page"\n        enableVerticalResponsiveness="true"><additionalContent><Button icon="{i18n>iHome}" text="{i18n>btnGoHome}" press="onPressNavigateToPage(\'Home\')"/></additionalContent></IllustratedMessage></mvc:View>',
    "pharelyshau/view/Resume.view.xml": '<mvc:View\n\tcontrollerName="pharelyshau.controller.Resume"\n\txmlns:mvc="sap.ui.core.mvc"\n\txmlns="sap.m"\n\txmlns:f="sap.f"\n\txmlns:core="sap.ui.core"\n\tcore:require="{ formatMessage: \'sap/base/strings/formatMessage\' }"><f:DynamicPage><f:title><f:DynamicPageTitle><f:heading><Title text="{/FirstName} {/LastName}" wrapping="true"/></f:heading><f:snappedContent><core:Fragment fragmentName="pharelyshau.fragment.Resume.SubTitle" type="XML"/></f:snappedContent><f:expandedContent><core:Fragment fragmentName="pharelyshau.fragment.Resume.SubTitle" type="XML"/></f:expandedContent><f:actions><Button visible="{= !${device>/system/phone} &amp;&amp; ${device>/resize/width} > 550}"\n\t\t\t\t\t\t\ttext="{i18n>btnMakeAppointment}" press="onPressNavigateToPage(\'Calendar\')"\n\t\t\t\t\t\t\ticon="{i18n>iAppointment}" type="Emphasized"/><Button visible="{= !${device>/system/phone} &amp;&amp; ${device>/resize/width} > 850}"\n\t\t\t\t\t\ttext="{i18n>btnSendEmail}" press="onPressSendEmail" icon="{i18n>iEmail}"/><OverflowToolbarButton text="{i18n>ttlMenu}" press="onPressOpenOverflowMenu" ariaHasPopup="Menu"\n\t\t\t\t\t\ticon="{= ${device>/system/phone} || 550 >= ${device>/resize/width}\n\t\t\t\t\t\t\t? ${i18n>iMobileMenu} : ${i18n>iOverflowMenu} }"><layoutData><OverflowToolbarLayoutData closeOverflowOnInteraction="false"/></layoutData></OverflowToolbarButton></f:actions></f:DynamicPageTitle></f:title><f:content><VBox class="phLimitedPageContent sapUiMediumMarginBottom"><Panel><Title text="{i18n>ttlSummary}" wrapping="true"/><Text text="{/Summary}" class="sapUiTinyMarginTop"/></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlSkills}" wrapping="true"/><VBox items="{/SkillsByTypes}"><core:Fragment fragmentName="pharelyshau.fragment.Resume.SkillsByType"\n\t\t\t\t\t\t\ttype="XML" class="sapUiTinyMarginTop"/></VBox></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlExperience}" wrapping="true"/><VBox items="{/Experience}"><core:Fragment fragmentName="pharelyshau.fragment.Resume.Experience"\n\t\t\t\t\t\t\ttype="XML" class="sapUiTinyMarginTop"/></VBox></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlEducation}" wrapping="true"/><VBox items="{/Education}"><core:Fragment fragmentName="pharelyshau.fragment.Resume.Education"\n\t\t\t\t\t\t\ttype="XML" class="sapUiTinyMarginTop"/></VBox></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlCourses}" wrapping="true"/><VBox items="{/Courses}"><Text text="•&#160; {Name}, {Year}" class="sapUiTinyMarginTop"/></VBox></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlAchievements}" wrapping="true"/><VBox items="{/Achievements}"><HBox class="sapUiTinyMarginTop"><core:Icon src="{Icon}" class="sapUiTinyMarginEnd"/><FormattedText htmlText="{= ${Name} + \' \' + (!${Link} \n\t\t\t\t\t\t\t\t? \'\' : \'(\' + ${parts: [\'i18n>linkWithText\', \'Link\', \'LinkText\'], formatter: \'formatMessage\'} + \')\')\n\t\t\t\t\t\t\t}"/></HBox></VBox></Panel><Panel class="sapUiSmallMarginTop"><Title text="{i18n>ttlLanguages}" wrapping="true"/><VBox items="{/Languages}"><Text text="{Icon}&#160; {Name} – {Level}"\n\t\t\t\t\t\t\tclass="sapUiTinyMarginTop"/></VBox></Panel></VBox></f:content></f:DynamicPage></mvc:View>'
});