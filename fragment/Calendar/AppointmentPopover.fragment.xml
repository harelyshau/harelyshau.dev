<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m">
    <ResponsivePopover placement="Auto" horizontalScrolling="false" contentWidth="22rem">
        <customHeader>
            <Toolbar width="{= ${device>/system/phone} ? 'auto' : '22rem' }"
                style="Clear" class="phNoPaddingBegin">
                <!-- Device Phone -->
                <Title visible="{device>/system/phone}" class="phNoMargin"
                    text="{= !${Name} || !${Name}.trim() ? ${i18n>ttlNoAppointmentName} : ${Name} }"/>
                <!-- Device Desktop -->
                <Title visible="{= !${device>/system/phone} }" class="sapUiSmallMarginBegin"
                    text="{= !${Name} || !${Name}.trim() ? ${i18n>ttlNoAppointmentName} : ${Name} }"/>                
                <ToolbarSpacer/>
                <Button tooltip="{i18n>btnClose}" press="onPressCloseAppointmentPopover"
                    icon="{i18n>iClose}"/>
            </Toolbar>
        </customHeader>
        <VBox class="sapUiSmallMarginBeginEnd">
            <!-- Email -->
            <VBox class="sapUiSmallMarginTop">
                <Label text="{i18n>lYourEmail}" showColon="true"/>
                <Text text="{Email}" emptyIndicatorMode="On"/>
            </VBox>
            <!-- Date and Time -->
            <VBox class="sapUiSmallMarginTop">
                <Label text="{i18n>lDateAndTime}:"/>
                <HBox>
                    <Text text="{path: 'StartDate', type: 'sap.ui.model.type.DateTime', formatOptions: {style: 'medium/short'} } &#160;–&#160;
                        {= ${StartDate}.getDate() === ${EndDate}.getDate() &amp;&amp;
                            ${StartDate}.getMonth() === ${EndDate}.getMonth() &amp;&amp;
                            ${StartDate}.getFullYear() === ${EndDate}.getFullYear()
                            ? ${path: 'EndDate', type: 'sap.ui.model.type.Time', formatOptions: {style: 'short'} }
                            : ${path: 'EndDate', type: 'sap.ui.model.type.Time', formatOptions: {style: 'short'} }
                                + ', ' + ${path: 'EndDate', type: 'sap.ui.model.type.Date', formatOptions: {style: 'medium'} } }"/>
                    <!-- <Label text="–" class="sapUiTinyMarginBeginEnd"/>
                    <Text text="{path: 'EndDate', type: 'sap.ui.model.type.DateTime', formatOptions: {style: 'medium/short'} }"/> -->
                </HBox>
            </VBox>
            <!-- Conference -->
            <VBox class="sapUiSmallMarginTop">
                <Label text="{i18n>lConference}" showColon="true"/>
                <VBox visible="{= !!${GoogleMeet} || !!${Conference} }">
                    <HBox justifyContent="SpaceBetween" renderType="Bare">
                        <HBox width="80%" renderType="Bare">
                            <Button enabled="{= !${GoogleMeet} || ${GoogleMeet} !== 'willBeCreated' }"
                                press="onPressJoinToConference" iconDensityAware="false" class="phButton"
                                text="{= ${GoogleMeet} ? ${i18n>btnJoinWithGoogleMeet} : ${i18n>btnJoinToConference} }"
                                icon="{= ${GoogleMeet} ? '/resource/image/GoogleMeetIcon.svg' : 'sap-icon://video' }"/>
                        </HBox>
                        <Button enabled="{= !${GoogleMeet} || ${GoogleMeet} !== 'willBeCreated' }"
                            icon="{i18n>iCopy}" press="onPressCopyConferenceLink"
                            tooltip="{i18n>btnCopy}" type="Transparent"/>
                    </HBox>
                    <Label text="{= !${GoogleMeet} ? ${Conference} : ${GoogleMeet} !== 'willBeCreated' 
                        ? ${GoogleMeet} : ${i18n>lLinkWillBeAvailableSoon} }"/>
                </VBox>
                <Text visible="{= !${GoogleMeet} &amp;&amp; !${Conference} }" text="–"/>
            </VBox>
            <!-- Agenda -->
            <VBox class="sapUiSmallMarginTopBottom" width="100%">
                <Label text="{i18n>lAgenda}:"/>
                <ExpandableText text="{Description}" maxCharacters="256" emptyIndicatorMode="On"/>
            </VBox>
        </VBox>
        <beginButton>
            <Button text="{i18n>btnEdit}" press="onPressEditOpenAppointmentDialog" type="Emphasized"
                enabled="{= ${ID} !== 'new'}"/>
        </beginButton>
        <endButton>
            <Button text="{i18n>btnDelete}" press="onPressRemoveAppointment"
                enabled="{= ${ID} !== 'new'}"/>
        </endButton>
    </ResponsivePopover>
</core:FragmentDefinition>