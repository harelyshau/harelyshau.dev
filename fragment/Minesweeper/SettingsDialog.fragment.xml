<core:FragmentDefinition
    xmlns:core="sap.ui.core"
    xmlns="sap.m"
    core:require="{
        formatter: 'pharelyshau/model/formatter',
        formatMessage: 'sap/base/strings/formatMessage'
    }">
    <Dialog title="Set up field" icon="sap-icon://table-view"
        afterClose="startTimer" binding="{view>/CustomLevel}">
        <HBox class="sapUiSmallMargin" justifyContent="SpaceBetween" id="settingsBox">
            <VBox>
                <Label text="Width" showColon="true" design="Bold"/>
                <Input width="5em" maxLength="3"
                    value="{path: 'view>Width', type: 'sap.ui.model.type.Integer' }"
                    valueState="{ path: 'view>Width', formatter: 'formatter.fieldSizeState' }"
                    valueStateText="{= ${view>Width} > 100 ? 'Value must be less than or equal to 100' : 1 > ${view>Width} ? 'Value must be greater than 0' : '' }"/>
            </VBox>
            <VBox>
                <Label text="Height" showColon="true" design="Bold"/>
                <Input width="5em" maxLength="3"
                    value="{path: 'view>Height', type: 'sap.ui.model.type.Integer' }"
                    valueState="{ path: 'view>Height', formatter: 'formatter.fieldSizeState' }"
                    valueStateText="{= ${view>Height} > 100 ? 'Value must be less than or equal to 100' : 1 > ${view>Height} ? 'Value must be greater than 0' : '' }"/>
            </VBox>
            <VBox>
                <Label text="Mines" showColon="true" design="Bold"/>
                <Input width="5em" maxLength="4"
                    value="{path: 'view>Mines', type: 'sap.ui.model.type.Integer' }"
                    valueState="{ parts: ['view>Mines', 'view>Width', 'view>Height'], formatter: 'formatter.minesCountState' }"
                    valueStateText="{= 1 > ${view>Mines} ? 'Value must be greater than 0' : ${view>Mines} >= ${view>Width} * ${view>Height} ? 'Mines must be less than the cells on the field' : '' }"/>
            </VBox>
        </HBox>
        <beginButton>
            <Button text="Apply" type="Emphasized" press="onPressApplySettings"/>
        </beginButton>
        <endButton>
            <Button text="{i18n>btnClose}" press="onPressCloseModalWindow"/>
        </endButton>
    </Dialog>
</core:FragmentDefinition>