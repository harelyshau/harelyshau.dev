<mvc:View xmlns:core="sap.ui.core"
    controllerName="pharelyshau.controller.HanoiTower"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns="sap.m"
	xmlns:f="sap.f"
    core:require="{formatter: 'pharelyshau/model/formatter'}"
    xmlns:dnd="sap.ui.core.dnd">
	<f:DynamicPage>
        <!-- HEADER -->
		<f:title>
			<f:DynamicPageTitle>
				<f:heading>
					<Title text="Hanoi Tower" wrapping="true"/>
				</f:heading>
				<f:snappedContent>
                    <Label text="Try yourself in this Pyramid Puzzle" wrapping="true"/>
                </f:snappedContent>
                <f:expandedContent>
                    <Label text="Try yourself in this Pyramid Puzzle" wrapping="true"/>
                </f:expandedContent>
				<f:actions>
					<Button press="onPressOpenOverflowMenu" ariaHasPopup="Menu"
						icon="{= ${device>/system/phone} || 550 >= ${device>/resize/width}
                            ? ${i18n>iMobileMenu} : ${i18n>iOverflowMenu} }"/>
				</f:actions>
			</f:DynamicPageTitle>
		</f:title>
		<f:content>
			<VBox class="phLimitedPageContent sapUiMediumMarginBottom" alignItems="Center" renderType="Bare" >
                <Panel id="panel" height="100%">
                    <!-- HEADER TOOLBAR -->
                    <headerToolbar>
                        <OverflowToolbar height="3rem">
                            <!-- Disc Count -->
                            <Label id="lblDiscCount" text="Discs:">
                                <layoutData>
                                    <OverflowToolbarLayoutData group="1" priority="Low"/>
                                </layoutData>
                            </Label>
                            <Select items="{/DiscCounts}" selectedKey="{path: '/DiscCount', type: 'sap.ui.model.type.Integer'}"
                                change="onChangeDiscsCount" ariaLabelledBy="lblDiscCount">
                                <core:ListItem text="{}" key="{}" icon="{parts: ['', '/Records'], formatter: 'formatter.discCountIcon'}"/>
                                <layoutData>
                                    <OverflowToolbarLayoutData group="1" priority="Low"/>
                                </layoutData>
                            </Select>
                            <ToolbarSpacer/>
                            <!-- Time -->
                            <core:Icon src="sap-icon://fob-watch"/>
                            <VBox renderType="Bare">
                                <Title text="{= !${device>/system/phone} ? 'Time:' : '' }
                                    {path: '/Time', formatter: 'formatter.timeMinSec'}"/>
                            </VBox>
                            <!-- Moves -->
                            <core:Icon src="sap-icon://step" class="sapUiSmallMarginBegin"/>
                            <Title text="{= !${device>/system/phone} ? 'Moves:' : '' } {/Moves}" />
                            <ToolbarSpacer/>
                            <!-- Buttons -->
                            <Button text="Restart" press="onPressRestartGame" icon="sap-icon://restart"/>
                            <Button text="Records" press="onPressOpenRecordsDialog" icon="sap-icon://competitor"/>
                        </OverflowToolbar>
                    </headerToolbar>
                    <!-- GAME -->
                    <HBox items="{/Pegs}" width="100%" justifyContent="Center" class="sapUiSmallMarginTopBottom">
                        <VBox width="{= 100 / ${/Pegs}.length }%" alignItems="Center" justifyContent="End">
                            <!-- Peg -->
                            <Title visible="{view>/showMoveButtons}" titleStyle="H6"
                                text="Peg {= String.fromCharCode(${/Pegs}.indexOf(${}) + 65) }" class="sapUiSmallMarginBottom"/>
                            <CustomListItem type="{= !${}.length &amp;&amp; !${view>/selectedPeg} ? 'Inactive' : 'Active'}"
                                press="onPressMoveDiscByBox" selected="{= ${} === ${view>/selectedPeg} }" class="phNoFocus">
                                <VBox renderType="Bare" items="{path: '', templateShareable: true}" class="phPegBox" alignItems="Center" fieldGroupIds="pegs"
                                    width="100%" height="{= !${view>/pegBoxHeight} ? '100%' : ${view>/pegBoxHeight} + 'px' }" justifyContent="End">
                                    <!-- Disc -->
                                    <Button width="{parts: ['', '/DiscCount', 'view>/discButtonMaxWidth'], formatter: 'formatter.discWidth'}"
                                        text="{}" type="{path: '', formatter: 'formatter.discType'}"
                                        press="onPressFirePegPress" class="phDiscButton">
                                        <layoutData>
                                            <FlexItemData minWidth="28px" maxWidth="100%"/>
                                        </layoutData>
                                    </Button>
                                </VBox>
                                <layoutData>
                                    <FlexItemData minWidth="100%" maxWidth="100%"/>
                                </layoutData>
                            </CustomListItem>
                            <!-- Buttons -->
                            <VBox visible="{view>/showMoveButtons}" items="{path: '/Pegs', templateShareable: true}"
                                class="sapUiSmallMarginTop">
                                <Button text="to {= String.fromCharCode(${/Pegs}.indexOf(${}) + 65) }"
                                    core:require="{moveButtonVisible: 'pharelyshau/model/formatMoveButtonVisible'}"
                                    press="onPressMoveDiscByButton" visible="{path: '', formatter: 'moveButtonVisible'}"/>
                            </VBox>
                        </VBox>
                    </HBox>
                    <!-- FOOTER TOOLBAR -->
                    <HBox renderType="Bare" alignItems="Center" justifyContent="SpaceBetween" wrap="Wrap">
                        <HBox alignItems="Center" class="sapUiTinyMarginEnd" renderType="Bare">
                            <Label text="Show Buttons:" wrapping="true" width="auto"/>
                            <Switch state="{view>/showMoveButtons}" customTextOn=" " customTextOff=" "
                                change="onChangeMoveButtonsSwith"/>
                        </HBox>
                        <Label wrapping="true" text="Min moves to win: {= Math.pow(2, ${/DiscCount}) - 1 }"/>
                    </HBox>
                </Panel>
                <!-- INSTRUCTIONS -->
                <core:Fragment fragmentName="pharelyshau.fragment.HanoiTower.Instructions"
					type="XML" class="sapUiSmallMarginTop"/>
			</VBox>
		</f:content>
	</f:DynamicPage>
</mvc:View>